{"version":3,"sources":["screens/category/CreateCategory.js"],"names":["baseUrl","CreateCategory","props","handleChange","changeObject","setState","submitHandler","e","preventDefault","axios","post","name","state","description","then","window","location","href","catch","error","console","log","userId","localStorage","getItem","undefined","categoryOption","get","response","data","className","placeholder","required","onChange","target","value","to","type","onClick","this","React","Component"],"mappings":"+QAeQA,EAAU,sBAEZC,E,kDAEF,WAAYC,GAAO,IAAD,uBACd,cAAMA,IAUVC,aAAgB,SAACC,GACb,EAAKC,SAASD,IAZA,EAelBE,cAAgB,SAACC,GACbA,EAAEC,iBACFC,IAAMC,KAAK,UAAGV,GAAH,mBAAiC,CACxCW,KAAM,EAAKC,MAAMD,KACjBE,YAAa,EAAKD,MAAMC,cAEzBC,MAAK,WACJC,OAAOC,SAASC,KAAO,sCAExBC,OAAO,SAAAC,GACNC,QAAQC,IAAIF,OAvBhB,IAAMG,EAASC,aAAaC,QAAQ,QAFtB,MAGD,IAAVF,QAA0BG,GAAVH,IAAqBP,OAAOC,SAASC,KAAM,iCAC9D,EAAKL,MAAQ,CACTD,KAAM,GACNE,YAAa,GACba,eAAgB,IAPN,E,gEA6BE,IAAD,OAEfjB,IAAMkB,IAAI,UAAG3B,GAAH,oBACPc,MAAK,SAACc,GACL,EAAKvB,SAAS,CAAEqB,eAAgBE,EAASC,KAAKA,UAE/CX,OAAM,SAAUC,GACfC,QAAQC,IAAIF,Q,+BAIX,IAAD,OACJ,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAMW,UAAU,cAAhB,UACI,eAAC,IAAD,WACI,eAAC,IAAD,mBAAa,sBAAMA,UAAU,cAAhB,kBACb,cAAC,IAAD,CACAA,UAAU,eACVC,YAAY,aACZC,UAAQ,EACRrB,KAAK,OACLsB,SAAU,SAAC1B,GAAD,OAAO,EAAKJ,aAAa,CAAEQ,KAAMJ,EAAE2B,OAAOC,cAGxD,eAAC,IAAD,WACI,cAAC,IAAD,0BACA,cAAC,KAAD,CACAL,UAAU,eACVC,YAAY,oBACZpB,KAAK,cACLsB,SAAU,SAAC1B,GAAD,OAAO,EAAKJ,aAAa,CAAEU,YAAaN,EAAE2B,OAAOC,mBAKvE,cAAC,IAAD,UACC,cAAC,IAAD,CAAML,UAAU,cAAhB,SACI,eAAC,IAAD,WACG,cAAC,IAAD,CAASM,GAAG,YAAYN,UAAU,cAAlC,oBACA,cAAC,IAAD,CAASO,KAAK,SAASC,QAAWC,KAAKjC,cAAgBwB,UAAU,cAAjE,2C,GA1EHU,IAAMC,WAoFpBxC","file":"static/js/23.a1345537.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CTextarea,\n    CLabel\n  } from '@coreui/react';\n\n  const baseUrl = 'http://localhost:81';\n\nclass CreateCategory extends React.Component { \n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =\"http://localhost:3000/#/login\";\n        this.state = {\n            name: '',\n            description: '',\n            categoryOption: []\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        axios.post(`${baseUrl}`+`/api/v1/category`, {\n            name: this.state.name,\n            description: this.state.description\n        })\n          .then(function () {\n            window.location.href = \"http://localhost:3000/#/category\";\n          })\n          .catch( error => {\n            console.log(error);\n          })\n    }\n\n    componentDidMount(){\n        // Get Category Option\n        axios.get(`${baseUrl}`+`/api/v1/category`)\n          .then((response) => {\n            this.setState({ categoryOption: response.data.data });\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                    <CForm>\n                        <CRow>\n                            <CCol className=\"md-12 xs-12\">\n                                <CFormGroup>\n                                    <CLabel>Name <span className=\"text-danger\">*</span></CLabel>\n                                    <CInput\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Name\"\n                                    required\n                                    name=\"name\"\n                                    onChange={(e) => this.handleChange({ name: e.target.value }) }\n                                    />\n                                </CFormGroup>\n                                <CFormGroup>\n                                    <CLabel>Description</CLabel>\n                                    <CTextarea\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Description\"\n                                    name=\"description\"\n                                    onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                    />\n                                </CFormGroup>\n                            </CCol>\n                        </CRow>\n                        <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                <CButton to=\"/category\" className=\"float-right\">Cancel</CButton>\n                                <CButton type=\"submit\" onClick= { this.submitHandler } className=\"float-right\">Save Change</CButton>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                    </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\nexport default CreateCategory;"],"sourceRoot":""}