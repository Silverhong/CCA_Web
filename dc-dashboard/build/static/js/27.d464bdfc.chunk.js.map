{"version":3,"sources":["screens/tag/CreateTag.js"],"names":["CreateTag","props","handleChange","changeObject","setState","submitHandler","e","preventDefault","state","name","undefined","messageError","axios","post","description","then","window","location","href","catch","error","console","log","userId","localStorage","getItem","className","placeholder","onChange","target","value","this","to","type","onClick","React","Component"],"mappings":"+QAiBQA,E,kDAEJ,WAAYC,GAAO,IAAD,uBACd,cAAMA,IAUVC,aAAgB,SAACC,GACb,EAAKC,SAASD,IAZA,EAelBE,cAAgB,SAACC,GACbA,EAAEC,iBACoB,IAAnB,EAAKC,MAAMC,WAAiCC,GAAnB,EAAKF,MAAMC,KACtC,EAAKL,SAAS,CAAEO,aAAc,qBAE3BC,IAAMC,KAAK,UAxBL,uBAwBK,cAA4B,CACnCJ,KAAM,EAAKD,MAAMC,KACjBK,YAAa,EAAKN,MAAMM,cAE3BC,MAAK,WACNC,OAAOC,SAASC,KAAO,iCAEtBC,OAAO,SAAAC,GACJC,QAAQC,IAAIF,OA1BpB,IAAMG,EAASC,aAAaC,QAAQ,QAFtB,MAGD,IAAVF,QAA0Bb,GAAVa,IAAqBP,OAAOC,SAASC,KAAM,iCAC9D,EAAKV,MAAQ,CACTG,aAAc,GACdF,KAAM,GACNK,YAAa,IAPH,E,qDAiCT,IAAD,OACJ,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACK,eAAC,IAAD,WACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAMY,UAAU,cAAhB,SACI,eAAC,IAAD,WACD,eAAC,IAAD,mBAAa,sBAAMA,UAAU,cAAhB,kBACZ,cAAC,IAAD,CACAA,UAAU,eACVC,YAAY,aACZlB,KAAK,OACLmB,SAAU,SAACtB,GAAD,OAAO,EAAKJ,aAAa,CAAEO,KAAMH,EAAEuB,OAAOC,WAEpD,uBAAOJ,UAAU,cAAjB,SAAgCK,KAAKvB,MAAMG,sBAInD,cAAC,IAAD,UACI,cAAC,IAAD,CAAMe,UAAU,cAAhB,SACI,eAAC,IAAD,WACA,cAAC,IAAD,0BACI,cAAC,KAAD,CAAWC,YAAY,oBACtBlB,KAAK,cACLmB,SAAU,SAACtB,GAAD,OAAO,EAAKJ,aAAa,CAAEY,YAAaR,EAAEuB,OAAOC,kBAKxE,cAAC,IAAD,UACI,cAAC,IAAD,CAAMJ,UAAU,cAAhB,SACI,eAAC,IAAD,WACG,cAAC,IAAD,CAASM,GAAG,OAAON,UAAU,cAA7B,oBACA,cAAC,IAAD,CAASO,KAAK,SAASC,QAAWH,KAAK1B,cAAgBqB,UAAU,cAAjE,2C,GArENS,IAAMC,WA+EfpC","file":"static/js/27.d464bdfc.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CTextarea,\n    CLabel,\n  } from '@coreui/react';\n \n  const baseUrl = 'http://localhost:81';\n\n  class CreateTag extends React.Component {\n    \n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =\"http://localhost:3000/#/login\";\n        this.state = {\n            messageError: '',\n            name: '',\n            description: ''\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        if(this.state.name == '' || this.state.name == undefined ){\n         this.setState({ messageError: 'Name is required'});\n        }else{\n            axios.post(`${baseUrl}`+`/api/v1/tag`, {\n                name: this.state.name,\n                description: this.state.description\n            })\n            .then(function () {\n            window.location.href = \"http://localhost:3000/#/tag\";\n            })\n            .catch( error => {\n                console.log(error);\n            })\n        }\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                     <CForm>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                            <CLabel>Name <span className=\"text-danger\">*</span></CLabel>\n                             <CInput\n                             className=\"form-control\"\n                             placeholder=\"Enter Name\"\n                             name=\"name\"\n                             onChange={(e) => this.handleChange({ name: e.target.value }) }\n                             />\n                             <small className=\"text-danger\">{this.state.messageError}</small>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                             <CLabel>Description</CLabel>\n                                 <CTextarea placeholder=\"Enter Description\"\n                                  name=\"description\"\n                                  onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                  />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                <CButton to=\"/tag\" className=\"float-right\">Cancel</CButton>\n                                <CButton type=\"submit\" onClick= { this.submitHandler } className=\"float-right\">Save Change</CButton>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n  }\n  export default CreateTag;"],"sourceRoot":""}