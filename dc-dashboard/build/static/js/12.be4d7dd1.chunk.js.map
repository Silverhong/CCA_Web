{"version":3,"sources":["Service.js","screens/post/CreatePost.js"],"names":["serviceAPI","config","headers","CreatePost","props","handleChange","changeObject","setState","submitHandler","e","preventDefault","state","category_id","postOject","fd","FormData","append","file","axios","post","ServiceApi","then","respone","data","filename","title","barcode","thumbnail","description","body","window","location","href","origin","catch","error","console","log","hidden","userId","localStorage","getItem","undefined","id","handleWYSIWYGInput","editor","ClassicEditor","url","category","categoryOption","tagOption","event","this","target","files","URL","createObjectURL","get","onSubmit","className","placeholder","name","onChange","value","rows","cols","ckfinder","uploadUrl","getData","src","alt","type","handleUploadChange","for","map","option","style","color","to","React","Component"],"mappings":"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","file":"static/js/12.be4d7dd1.chunk.js","sourcesContent":["const serviceAPI = `http://localhost:81`;\n\nexport default serviceAPI","import React from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport axios from 'axios';\nimport ServiceApi from \"../../Service\";\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CLabel,\n    CButton,\n    CSelect,\n    CCardFooter,\n    CTextarea\n  } from '@coreui/react';\n\n  const config = {\n    headers: {\n        'content-type': 'multipart/form-data',\n        'Accept': '*'\n    }\n};\n\nclass CreatePost extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            id: props.id,\n            handleWYSIWYGInput: props.handleWYSIWYGInput,\n            editor: ClassicEditor,\n            title: '',\n            barcode: '',\n            file: [],\n            description: '',\n            body: '',\n            url: 'avatars/no_image.png',\n            category_id: '',\n            category: '',\n            categoryOption: [],\n            tagOption: [],\n            hidden: true\n        } \n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    handleUploadChange(event) {\n        this.setState({\n          file: event.target.files[0],\n          url: URL.createObjectURL(event.target.files[0]),\n        })\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        if(this.state.category_id == ''){\n            this.setState({hidden: false });\n            return\n        }\n\n        let postOject = [];\n        let fd = new FormData();\n            fd.append('file', this.state.file);\n\n        if(!(this.state.file == '')){\n            // Upload image thumnail\n            axios.post(`${ServiceApi}/api/v1/upload`, fd, config).then( respone => {\n                this.setState({ file: respone.data.filename})\n\n                postOject = {\n                    title: this.state.title,\n                    barcode: this.state.barcode,\n                    thumbnail: this.state.file,\n                    description: this.state.description,\n                    body: this.state.body,\n                    category_id: this.state.category_id,\n                }\n\n                // Create Post\n                axios.post(`${ServiceApi}/api/v1/post`, postOject ).then(() => {\n                    window.location.href=`${window.origin}/#/post`;\n                }).catch( error => console.log(error))\n            })\n        }else{\n            postOject = {\n                title: this.state.title,\n                barcode: this.state.barcode,\n                description: this.state.description,\n                body: this.state.body,\n                category_id: this.state.category_id,\n            }\n\n            // Create Post\n            axios.post(`${ServiceApi}/api/v1/post`, postOject ).then(() => {\n                window.location.href=`${window.origin}/#/post`;\n            }).catch( error => console.log(error))\n        }\n    }\n\n    componentDidMount(){\n        // Get Category All\n        axios.get(`${ServiceApi}/api/v1/category`)\n        .then((respone) => {\n            this.setState({\n                categoryOption: respone.data.data\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                <CForm onSubmit={this.submitHandler}>\n                    <CRow>\n                        <CCol className=\"col-md-8 xs-8\">\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Post Name <span className=\"text-danger\">*</span></CLabel>\n                                    <CInput\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Post Name\"\n                                    name=\"title\"\n                                    onChange={(e) => this.handleChange({ title: e.target.value }) }\n                                    />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Post Code </CLabel>\n                                    <CInput\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Post Code\"\n                                    name=\"barcode\"\n                                    onChange={(e) => this.handleChange({ barcode: e.target.value }) }\n                                    />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Description </CLabel>\n                                    <CTextarea\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Description\"\n                                    name=\"description\"\n                                    rows=\"6\"\n                                    cols=\"4\"\n                                    onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                    />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Content</CLabel>\n                                    <CKEditor\n                                    editor={ ClassicEditor }\n                                    data={this.state.body}\n                                    config={{ckfinder: {\n                                        // Upload the images to the server using the CKFinder QuickUpload command\n                                        // You have to change this address to your server that has the ckfinder php connector\n                                        uploadUrl: `${ServiceApi}/api/v1/uploader`\n                                    }}}\n                                    \n                                    onChange={ ( event, editor ) => {\n                                        const data = editor.getData();\n                                        this.setState({ body: data});\n                                        // console.log( { event, editor, data } );\n                                    } }\n                                />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                        </CCol>\n                        <CCol className=\"col-md-4 col-xs-4\">\n                            <CCard>\n                                <CCardBody>\n                                <CCard>\n                                     <CCardBody>\n                                     <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                                <img src={`${this.state.url}`} alt=\"logo\" className=\"img-fluid\"></img>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                     </CCardBody>\n                                     <CCardFooter>\n                                     <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                                <div className=\"input-group mb-3\">\n                                                    <div className=\"input-group-prepend\">\n                                                        <span className=\"input-group-text\">Upload</span>\n                                                    </div>\n                                                    <div className=\"custom-file\">\n                                                    <input type=\"file\" \n                                                    className=\"custom-file-input\" id=\"inputGroupFile01\"\n                                                    name=\"image\"\n                                                    type=\"file\"\n                                                    className=\"custom-file-input\"\n                                                    onChange={(e) => this.handleUploadChange(e)}\n                                                    />\n                                                    <label className=\"custom-file-label\" for=\"inputGroupFile01\">Choose Image</label>\n                                                    </div>\n                                                </div>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                     </CCardFooter>\n                                 </CCard>\n                                    <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                            <CLabel>Menu Post <span className=\"text-danger\">*</span></CLabel>\n                                            <CSelect \n                                            name=\"category_id\"\n                                            onChange={(e) => this.handleChange({ category_id: e.target.value }) }\n                                            >\n                                                <option value=\"0\">Please select option</option>\n                                                {\n                                                    this.state.categoryOption.map(option => {\n                                                     return  <option key={option.id} value={option.id}>{option.name}</option>\n                                                    })\n                                                }\n                                            </CSelect>\n                                            <small hidden={this.state.hidden} style={{color: \"red\"}}>Please select one</small>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                </CCardBody>\n                            </CCard>\n                        </CCol>\n                    </CRow>\n                    <CRow>\n                        <CCol className=\"md-12 xs-12\">\n                            <CFormGroup>\n                                <CButton type=\"submit\" className=\"float-right\">Public</CButton>\n                                <CButton to=\"/post\" className=\"float-right\">Cancel</CButton>\n                            </CFormGroup>\n                        </CCol>\n                    </CRow>\n                </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\nexport default CreatePost;"],"sourceRoot":""}