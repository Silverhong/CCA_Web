{"version":3,"sources":["screens/tag/UpdateTag.js"],"names":["baseUrl","UpdateTag","props","handleChange","changeObject","setState","submitHandler","e","preventDefault","state","name","undefined","messageError","axios","put","id","description","then","window","location","href","catch","error","console","log","userId","localStorage","getItem","match","params","tags","get","this","respone","data","map","item","className","placeholder","value","onChange","target","to","type","onClick","React","Component"],"mappings":"+QAeQA,EAAU,sBAEVC,E,kDAEJ,WAAYC,GAAO,IAAD,uBACd,cAAMA,IAYVC,aAAgB,SAACC,GACb,EAAKC,SAASD,IAdA,EAiBlBE,cAAgB,SAACC,GACbA,EAAEC,iBACoB,IAAnB,EAAKC,MAAMC,WAAiCC,GAAnB,EAAKF,MAAMC,KACnC,EAAKL,SAAS,CAAEO,aAAc,qBAE9BC,IAAMC,IAAI,UAAGd,GAAH,sBAA4B,EAAKS,MAAMM,IAAM,CACnDL,KAAM,EAAKD,MAAMC,KACjBM,YAAa,EAAKP,MAAMO,cAE3BC,MAAK,WACNC,OAAOC,SAASC,KAAO,iCAEtBC,OAAO,SAAAC,GACJC,QAAQC,IAAIF,OA5BpB,IAAMG,EAASC,aAAaC,QAAQ,QAFtB,MAGD,IAAVF,QAA0Bd,GAAVc,IAAqBP,OAAOC,SAASC,KAAM,iCAC9D,EAAKX,MAAQ,CACTG,aAAc,GACdG,GAAI,EAAKb,MAAM0B,MAAMC,OAAOd,GAC5BL,KAAM,GACNM,YAAa,GACbc,KAAM,IATI,E,gEAmCE,IAAD,OACfjB,IAAMkB,IAAN,UAAa/B,EAAb,uBAAmCgC,KAAKvB,MAAMM,KAC7CE,MAAK,SAACgB,GACH,EAAK5B,SAAS,CAAEyB,KAAMG,EAAQC,KAAKA,OACnCX,QAAQC,IAAIS,GACZ,EAAKxB,MAAMqB,KAAKK,KAAK,SAAAC,GACjB,EAAK/B,SAAS,CACVK,KAAM0B,EAAK1B,KACXM,YAAaoB,EAAKpB,oBAI7BK,OAAO,SAAAC,GACJC,QAAQC,IAAIF,Q,+BAIX,IAAD,OACJ,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACK,eAAC,IAAD,WACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAMe,UAAU,cAAhB,SACI,eAAC,IAAD,WACD,eAAC,IAAD,mBAAa,sBAAMA,UAAU,cAAhB,kBACZ,cAAC,IAAD,CACAA,UAAU,eACVC,YAAY,aACZ5B,KAAK,OACL6B,MAAOP,KAAKvB,MAAMC,KAClB8B,SAAU,SAACjC,GAAD,OAAO,EAAKJ,aAAa,CAAEO,KAAMH,EAAEkC,OAAOF,WAEpD,uBAAOF,UAAU,cAAjB,SAAgCL,KAAKvB,MAAMG,sBAInD,cAAC,IAAD,UACI,cAAC,IAAD,CAAMyB,UAAU,cAAhB,SACI,eAAC,IAAD,WACA,cAAC,IAAD,0BACI,cAAC,KAAD,CAAWC,YAAY,oBACtB5B,KAAK,cACL6B,MAAOP,KAAKvB,MAAMO,YAClBwB,SAAU,SAACjC,GAAD,OAAO,EAAKJ,aAAa,CAAEa,YAAaT,EAAEkC,OAAOF,kBAKxE,cAAC,IAAD,UACI,cAAC,IAAD,CAAMF,UAAU,cAAhB,SACI,eAAC,IAAD,WACG,cAAC,IAAD,CAASK,GAAG,OAAOL,UAAU,cAA7B,oBACA,cAAC,IAAD,CAASM,KAAK,SAASC,QAAWZ,KAAK1B,cAAgB+B,UAAU,cAAjE,2C,GA1FNQ,IAAMC,WAoGf7C","file":"static/js/29.90ee5053.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CTextarea,\n    CLabel,\n  } from '@coreui/react';\n\n  const baseUrl = 'http://localhost:81';\n\n  class UpdateTag extends React.Component {\n    \n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =\"http://localhost:3000/#/login\";\n        this.state = {\n            messageError: '',\n            id: this.props.match.params.id,\n            name: '',\n            description: '',\n            tags: []\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        if(this.state.name == '' || this.state.name == undefined ){\n            this.setState({ messageError: 'Name is required'});\n        }else{\n            axios.put(`${baseUrl}`+`/api/v1/tag/${this.state.id}`, {\n                name: this.state.name,\n                description: this.state.description\n            })\n            .then(function () {\n            window.location.href = \"http://localhost:3000/#/tag\";\n            })\n            .catch( error => {\n                console.log(error);\n            })\n        }\n    }\n\n    componentDidMount(){\n        axios.get(`${baseUrl}/api/v1/tag/${this.state.id}`)\n        .then((respone) => {\n            this.setState({ tags: respone.data.data });\n            console.log(respone);\n            this.state.tags.map( item => {\n                this.setState({\n                    name: item.name,\n                    description: item.description\n                });\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                     <CForm>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                            <CLabel>Name <span className=\"text-danger\">*</span></CLabel>\n                             <CInput\n                             className=\"form-control\"\n                             placeholder=\"Enter Name\"\n                             name=\"name\"\n                             value={this.state.name}\n                             onChange={(e) => this.handleChange({ name: e.target.value }) }\n                             />\n                             <small className=\"text-danger\">{this.state.messageError}</small>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                             <CLabel>Description</CLabel>\n                                 <CTextarea placeholder=\"Enter Description\"\n                                  name=\"description\"\n                                  value={this.state.description}\n                                  onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                  />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                <CButton to=\"/tag\" className=\"float-right\">Cancel</CButton>\n                                <CButton type=\"submit\" onClick= { this.submitHandler } className=\"float-right\">Save Change</CButton>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n  }\n  export default UpdateTag;"],"sourceRoot":""}