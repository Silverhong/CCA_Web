{"version":3,"sources":["screens/menu/UpdateMenu.js"],"names":["baseUrl","UpdateMenu","props","handleChange","changeObject","setState","handleCheckBoxChange","e","index","checkObj","state","categoryCheck","target","checked","push","value","console","log","indexOf","splice","submitHandler","preventDefault","axios","delete","id","catch","error","map","item","post","menu_id","category_id","put","name","description","then","window","location","href","userId","localStorage","getItem","undefined","match","params","categories","isChecked","get","respone","data","this","menus","activeTab","variant","data-tab","onSubmit","className","placeholder","onChange","type","to","React","Component"],"mappings":"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","file":"static/js/26.8302239a.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport $ from \"jquery\";\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CTextarea,\n    CLabel,\n    CTabs,\n    CNav,\n    CNavItem,\n    CNavLink,\n    CTabContent,\n    CTabPane\n  } from '@coreui/react';\n\n  const baseUrl = 'http://localhost:81';\n\n  class UpdateMenu extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =\"http://localhost:3000/#/login\";\n        this.state = {\n            id: this.props.match.params.id,\n            name: '',\n            description: '',\n            categories: [],\n            categoryCheck: [],\n            isChecked: true\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    handleCheckBoxChange = (e) => {\n        const checkObj = this.state.categoryCheck;\n        let index;\n        if(e.target.checked){\n            checkObj.push(e.target.value);\n            console.log(checkObj);\n        }else{\n            index = checkObj.indexOf(e.target.value)\n            checkObj.splice(index, 1)\n            console.log(checkObj);\n        }\n        this.setState({categoryCheck: checkObj});\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        // console.log(this.state.categoryCheck)\n        // return\n        // Replace MenuHasCategory\n        axios.delete(`${baseUrl}/api/v1/menuHasCategory/${this.state.id}`).catch( error => console.log(error));\n\n        // Get All checked insert to MenuHasCategory\n        this.state.categoryCheck.map( item => {\n            axios.post(`${baseUrl}/api/v1/menuHasCategory`, {\n                menu_id: this.state.id,\n                category_id: item\n            }).catch( error => console.log(error))\n        })\n        // Update Menu\n        axios.put(`${baseUrl}`+`/api/v1/menu/${this.state.id}`, {\n            name: this.state.name,\n            description: this.state.description\n        })\n          .then(function () {\n            window.location.href = \"http://localhost:3000/#/menu\";\n          })\n          .catch( error => {\n              console.log(error);\n          })\n    }\n\n    componentDidMount(){\n        // Get MenuHasCategory All\n        axios.get(`${baseUrl}/api/v1/menuHasCategory`).then( respone => {\n            this.setState({ categoryCheck: respone.data.data });\n        }).catch( error => console.log(error))\n\n        // Get Menu edit\n        axios.get(`${baseUrl}/api/v1/menu/${this.state.id}`)\n        .then((respone) => {\n            this.setState({\n                menus: respone.data.data\n            });\n            this.state.menus.map( item => {\n                this.setState({\n                    name: item.name,\n                    description: item.description\n                });\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n\n        // Get Category All for fetch\n        axios.get(`${baseUrl}/api/v1/category`)\n        .then((respone) => {\n            this.setState({\n                categories: respone.data.data\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                <CTabs activeTab=\"home\">\n                    <CNav variant=\"tabs\">\n                        <CNavItem>\n                        <CNavLink data-tab=\"home\">\n                            Info\n                        </CNavLink>\n                        </CNavItem>\n                        <CNavItem>\n                        <CNavLink data-tab=\"category\">\n                            categories\n                        </CNavLink>\n                        </CNavItem>\n                        <CNavItem>\n                        </CNavItem>\n                    </CNav>\n                    <CForm onSubmit={ this.submitHandler }>\n                    <CTabContent>\n                            <CTabPane data-tab=\"home\">\n                                    <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                            <CLabel>Name <span className=\"text-danger\">*</span></CLabel>\n                                            <CInput\n                                            className=\"form-control\"\n                                            placeholder=\"Enter Name\"\n                                            value={this.state.name}\n                                            onChange={(e) => this.handleChange({ name: e.target.value }) }\n                                            />\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                    <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                            <CLabel>Description</CLabel>\n                                                <CTextarea \n                                                placeholder=\"Enter Description\"\n                                                name=\"description\"\n                                                value={this.state.description}\n                                                onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                                />\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                            </CTabPane>\n                            <CTabPane data-tab=\"category\">\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                        <CLabel>Categories</CLabel>\n                                    </CFormGroup>\n                                    <CFormGroup>\n                                       { this.state.categories.map( (item) => {\n                                            return <CLabel key={item.id} className=\"mr-5\">\n                                                <input name=\"categoryCheck\" className=\"mr-2\" value={item.id} type=\"checkbox\"\n                                                onChange={ (e) => this.handleCheckBoxChange(e) }\n                                                />\n                                                { item.name }\n                                            </CLabel>\n                                        })\n                                       }\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            </CTabPane>\n                        </CTabContent>\n                        <CRow>\n                            <CCol className=\"md-12 xs-12\">\n                                <CFormGroup>\n                                    <CButton to=\"/menu\" className=\"float-right\">Cancel</CButton>\n                                    <CButton type=\"submit\" className=\"float-right\">Save Change</CButton>\n                                </CFormGroup>\n                            </CCol>\n                        </CRow>\n                    </CForm>\n                    </CTabs>\n                </CCardBody>\n            </CCard>\n        );\n    }\n  }\n  export default UpdateMenu;"],"sourceRoot":""}