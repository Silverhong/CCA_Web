{"version":3,"sources":["Service.js","screens/user/User.js"],"names":["serviceAPI","User","props","fields","key","label","_style","width","userDelete","axios","delete","ServiceApi","state","id","then","setState","show","window","location","reload","catch","error","console","log","hideAlert","userId","localStorage","getItem","undefined","href","origin","match","params","users","messageAlert","get","response","data","items","this","sorter","scopedSlots","item","to","className","size","format","createdAt","updatedAt","warning","showCancel","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","title","onConfirm","onCancel","React","Component"],"mappings":"6KAEeA,IAFC,uB,gLCaVC,E,kDAEF,WAAYC,GAAO,IAAD,uBACd,cAAMA,IAWVC,OAAS,CACL,CAAEC,IAAK,KAAMC,MAAO,KAAMC,OAAQ,CAAEC,MAAO,QAC3C,CAAEH,IAAK,WAAYC,MAAO,WAAYC,OAAQ,CAAEC,MAAO,QACvD,CAAEH,IAAK,QAASC,MAAO,QAASC,OAAQ,CAAEC,MAAO,QAGjD,CAAEH,IAAK,YAAaC,MAAO,cAAgBC,OAAQ,CAAEC,MAAO,QAE5D,CAAEH,IAAK,YAAaC,MAAO,cAAeC,OAAQ,CAAEC,MAAO,QAC3D,CAAEH,IAAK,SAAUE,OAAQ,CAAEC,MAAO,SArBpB,EAoClBC,WAAa,WACTC,IAAMC,OAAO,UAAGC,KAAH,uBAAgC,EAAKC,MAAMC,KACrDC,MAAK,WACF,EAAKC,SAAS,CAAEC,MAAM,IACtBC,OAAOC,SAASC,YAEnBC,OAAM,SAAUC,GACfC,QAAQC,IAAIF,OA3CF,EA+ClBG,UAAY,WACR,EAAKT,SAAS,CAAEC,MAAM,KA9CtB,IAAMS,EAASC,aAAaC,QAAQ,QAFtB,MAGD,IAAVF,QAA0BG,GAAVH,IAAqBR,OAAOC,SAASW,KAAhB,UAAyBZ,OAAOa,OAAhC,aACxC,EAAKlB,MAAQ,CACTC,GAAI,EAAKX,MAAM6B,MAAMC,OAAOnB,GAC5BoB,MAAO,GACPjB,MAAM,EACNkB,aAAc,IARJ,E,gEAwBG,IAAD,OAEhBzB,IAAM0B,IAAI,UAAGxB,KAAH,gBACPG,MAAK,SAACsB,GACL,EAAKrB,SAAS,CAAEkB,MAAOG,EAASC,KAAKA,OACrCf,QAAQC,IAAI,EAAKX,MAAMqB,UAExBb,OAAM,SAAUC,GACfC,QAAQC,IAAIF,Q,+BAoBhB,OACI,eAAC,IAAD,WAII,cAAC,IAAD,UACK,cAAC,IAAD,CACAiB,MAAOC,KAAK3B,MAAMqB,MAClB9B,OAAQoC,KAAKpC,OAKbqC,QAAM,EAENC,YAAe,CACZ,OACE,SAACC,GAAD,OACE,6BACI,cAAC,IAAD,CAASC,GAAE,qBAAgBD,EAAK7B,IAAM+B,UAAU,yBAAyBC,KAAK,KAA9E,qBAQR,UACE,SAACH,GAAD,OACE,6BACI,cAAC,IAAD,CAAQI,OAAO,cAAf,SAA+BJ,EAAKK,eAG5C,UACE,SAACL,GAAD,OACE,6BACI,cAAC,IAAD,CAAQI,OAAO,cAAf,SAA+BJ,EAAKM,oBAOpD,cAAC,IAAD,CACIhC,KAAMuB,KAAK3B,MAAMI,KACjBiC,SAAO,EACPC,YAAU,EACVC,eAAe,kBACfC,kBAAkB,SAClBC,iBAAiB,UACjBC,MAAM,gBACNC,UAAWhB,KAAK/B,WACnBgD,SAAUjB,KAAKf,mB,GA1GbiC,IAAMC,WAiHVzD","file":"static/js/20.116d8edb.chunk.js","sourcesContent":["const serviceAPI = `http://localhost:81`;\n\nexport default serviceAPI","import React from 'react';\nimport axios from 'axios';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Moment from 'react-moment';\nimport ServiceApi from \"../../Service\";\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CDataTable\n  } from '@coreui/react';\n\nclass User extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            id: this.props.match.params.id,\n            users: [],\n            show: false,\n            messageAlert: ''\n        }\n    }\n\n    fields = [\n        { key: 'id', label: 'ID', _style: { width: '10%' } },\n        { key: 'username', label: 'Username', _style: { width: '10%'} },\n        { key: 'email', label: 'Email', _style: { width: '10%'} },\n        // { key: 'role_id', label: 'Role', _style: { width: '10%'} },\n        // { key: 'createdBy', label: 'Recorder', _style: { width: '10%'} },\n        { key: 'createdAt', label: 'Record Date',  _style: { width: '20%'} },\n        // { key: 'updatedBy', label: 'Modifier', _style: { width: '10%'} },\n        { key: 'updatedAt', label: 'Modify Date', _style: { width: '20%'} },\n        { key: 'action', _style: { width: '15%'} }\n    ]\n\n    componentDidMount() {\n        // Get User All\n        axios.get(`${ServiceApi}`+`/api/v1/user`)\n          .then((response) => {\n            this.setState({ users: response.data.data });\n            console.log(this.state.users);\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    userDelete = () => {\n        axios.delete(`${ServiceApi}`+`/api/v1/user/${this.state.id}`)\n          .then(() => {\n              this.setState({ show: false });\n              window.location.reload();\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    hideAlert = () => {\n        this.setState({ show: false });\n    }\n\n    render(){\n        return(\n            <CCard>\n                {/* <CCardHeader>\n                    <CButton to=\"/user/create\" className=\"float-right\">+ New</CButton>\n                </CCardHeader> */}\n                <CCardBody>\n                     <CDataTable\n                     items={this.state.users}\n                     fields={this.fields}\n                    //  tableFilter\n                    //  itemsPerPageSelect\n                    //  itemsPerPage={5}\n                    //  hover\n                     sorter\n                    //  pagination\n                     scopedSlots = {{\n                        'action':\n                          (item)=>(\n                            <td>\n                                <CButton to={`/user/edit/${item.id}`} className=\"btn btn-secondary mr-2\" size='sm'>\n                                   Edit\n                                </CButton>\n                                {/* <CButton onClick={ () => this.setState({ show: true, id: item.id })} className=\"btn btn-danger sm\" size='sm'>\n                                   Delete\n                                </CButton> */}\n                            </td>\n                        ),\n                        'createdAt':\n                          (item)=>(\n                            <td>\n                                <Moment format=\"YYYY/MMM/DD\">{ item.createdAt }</Moment>\n                            </td>\n                        ),\n                        'updatedAt':\n                          (item)=>(\n                            <td>\n                                <Moment format=\"YYYY/MMM/DD\">{ item.updatedAt }</Moment>\n                            </td>\n                        )\n                    }}\n                     >\n                     </CDataTable>\n                </CCardBody>\n                <SweetAlert\n                    show={this.state.show}\n                    warning\n                    showCancel\n                    confirmBtnText=\"Yes, delete it!\"\n                    confirmBtnBsStyle=\"danger\"\n                    cancelBtnBsStyle=\"default\"\n                    title=\"Are you sure?\"\n                    onConfirm={this.userDelete}\n\t                onCancel={this.hideAlert}\n                />\n            </CCard>\n        );\n    }\n}\n\nexport default User;"],"sourceRoot":""}