{"version":3,"sources":["Service.js","screens/company/UpdateCompany.js"],"names":["serviceAPI","config","headers","UpdateCompany","props","handleChange","changeObject","setState","submitHandler","e","preventDefault","companyObject","state","file","axios","delete","ServiceApi","fileName","fd","FormData","append","post","then","respone","data","filename","name","email","phone","logo","address","description","put","id","window","location","href","origin","catch","error","console","log","userId","localStorage","getItem","undefined","match","params","handleWYSIWYGInput","editor","ClassicEditor","url","image","company","event","this","target","files","URL","createObjectURL","get","map","item","onSubmit","className","placeholder","value","onChange","getData","src","alt","type","handleUploadChange","for","to","React","Component"],"mappings":"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","file":"static/js/10.b54fbf31.chunk.js","sourcesContent":["const serviceAPI = `http://localhost:81`;\n\nexport default serviceAPI","import React from 'react';\nimport axios from 'axios';\nimport ServiceApi from \"../../Service\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CLabel,\n    CCardFooter\n  } from '@coreui/react';\n\n  const config = {\n    headers: {\n        'content-type': 'multipart/form-data',\n        'Accept': '*'\n    }\n};\n\n  class UpdateCompany extends React.Component {\n    \n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            id: this.props.match.params.id,\n            handleWYSIWYGInput: props.handleWYSIWYGInput,\n            editor: ClassicEditor,\n            name: '',\n            description: '',\n            address: '',\n            file: [],\n            url: 'avatars/no_image.png',\n            fileName: '',\n            image: [],\n            email: '',\n            phone: '',\n            company: []\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    handleUploadChange(event) {\n        this.setState({\n          file: event.target.files[0],\n          url: URL.createObjectURL(event.target.files[0]),\n        })\n      }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        let companyObject = [];\n        if(!(this.state.file == '')){\n            ///Delete old file\n            axios.delete(`${ServiceApi}/api/v1/delete/file/${this.state.fileName}`);\n            \n            // Upload file\n            let fd = new FormData();\n            fd.append('file', this.state.file);\n\n            axios.post(`${ServiceApi}/api/v1/upload`, fd, config)\n            .then( respone => {\n                this.setState({ file: respone.data.filename})\n                companyObject = {\n                    name: this.state.name,\n                    email: this.state.email,\n                    phone: this.state.phone,\n                    logo:  this.state.file,\n                    address: this.state.address,\n                    description: this.state.description\n                }\n                \n                // Update logo\n                axios.put(`${ServiceApi}`+`/api/v1/company/${this.state.id}`, companyObject)\n                .then(function () {\n                    window.location.href = `${window.origin}/#/company`;\n                })\n                .catch( error => {\n                    console.log(error);\n                })\n            })\n            .catch( error => console.log(error))\n        }else{\n            companyObject = {\n                name: this.state.name,\n                email: this.state.email,\n                phone: this.state.phone,\n                address: this.state.address,\n                description: this.state.description\n            }\n\n            // Update logo\n            axios.put(`${ServiceApi}`+`/api/v1/company/${this.state.id}`, companyObject)\n            .then(function () {\n                window.location.href = `${window.origin}/#/company`;\n            })\n            .catch( error => {\n                console.log(error);\n            })\n        }\n    }\n\n    componentDidMount(){\n        // Get companies\n        axios.get(`${ServiceApi}/api/v1/company/${this.state.id}`)\n        .then((respone) => {\n            this.setState({ company: respone.data.data });\n            this.state.company.map( item => {\n                this.setState({\n                    name: item.name,\n                    description: item.description,\n                    address: item.address,\n                    email: item.email,\n                    phone: item.phone,\n                    url: `${ServiceApi}/uploads/${item.logo}`,\n                    fileName: item.logo\n                });\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                     <CForm onSubmit={ this.submitHandler } >\n                         <CRow>\n                             <CCol className=\"col-md-8 col-xs-8\">\n                                <CRow>\n                                    <CCol className=\"md-12 xs-12\">\n                                        <CFormGroup>\n                                        <CLabel>Name <span className=\"text-danger\">*</span></CLabel>\n                                        <CInput\n                                        className=\"form-control\"\n                                        placeholder=\"Enter Name\"\n                                        name=\"name\"\n                                        value={this.state.name}\n                                        onChange={(e) => this.handleChange({ name: e.target.value }) }\n                                        />\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol className=\"md-12 xs-12\">\n                                        <CFormGroup>\n                                        <CLabel>Email</CLabel>\n                                        <CInput\n                                        className=\"form-control\"\n                                        placeholder=\"Enter Name\"\n                                        name=\"email\"\n                                        value={this.state.email}\n                                        onChange={(e) => this.handleChange({ email: e.target.value }) }\n                                        />\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol className=\"md-12 xs-12\">\n                                        <CFormGroup>\n                                        <CLabel>Phone </CLabel>\n                                        <CInput\n                                        className=\"form-control\"\n                                        placeholder=\"Enter Name\"\n                                        name=\"phone\"\n                                        value={this.state.phone}\n                                        onChange={(e) => this.handleChange({ phone: e.target.value }) }\n                                        />\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol className=\"md-12 xs-12\">\n                                        <CFormGroup>\n                                        <CLabel>Address </CLabel>\n                                        <CInput\n                                        className=\"form-control\"\n                                        placeholder=\"Enter Name\"\n                                        name=\"address\"\n                                        value={this.state.address}\n                                        onChange={(e) => this.handleChange({ address: e.target.value }) }\n                                        />\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol className=\"md-12 xs-12\">\n                                        <CFormGroup>\n                                        <CLabel>Description</CLabel>\n                                        <CKEditor\n                                            editor={ ClassicEditor }\n                                            data={this.state.description}\n                                            \n                                            onChange={ ( event, editor ) => {\n                                                const data = editor.getData();\n                                                this.setState({ description: data});\n                                            } }\n                                        />\n                                    </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                </CCol>\n                             <CCol className=\"col-md-4 col-xs-4 input-group mb-3\">\n                                 <CCard>\n                                     <CCardBody>\n                                     <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                                <img src={`${this.state.url}`} alt=\"logo\" className=\"img-fluid\"></img>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                     </CCardBody>\n                                     <CCardFooter>\n                                     <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                                <div className=\"input-group mb-3\">\n                                                    <div className=\"input-group-prepend\">\n                                                        <span className=\"input-group-text\">Upload</span>\n                                                    </div>\n                                                    <div className=\"custom-file\">\n                                                    <input type=\"file\" \n                                                    className=\"custom-file-input\" id=\"inputGroupFile01\"\n                                                    className=\"custom-file-input\"\n                                                    onChange={(e) => this.handleUploadChange(e)}\n                                                    />\n                                                    <label className=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label>\n                                                    </div>\n                                                </div>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                     </CCardFooter>\n                                 </CCard>\n                             </CCol>\n                         </CRow>\n                         <CRow>\n                            <CCol className=\"md-12 xs-12\">\n                                <CFormGroup>\n                                    <CButton to=\"/company\" className=\"float-right\">Cancel</CButton>\n                                    <CButton type=\"submit\" className=\"float-right\">Save Change</CButton>\n                                </CFormGroup>\n                            </CCol>\n                        </CRow>\n                     </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n  }\n  export default UpdateCompany;"],"sourceRoot":""}