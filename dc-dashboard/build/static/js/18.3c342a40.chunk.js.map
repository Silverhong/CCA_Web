{"version":3,"sources":["Service.js","screens/user/CreateUser.js"],"names":["serviceAPI","CreateUser","props","submitHandler","e","preventDefault","axios","post","ServiceApi","username","state","email","password","role","description","then","window","location","href","origin","handleChange","changeObject","setState","userId","localStorage","getItem","undefined","rolesOption","get","response","data","catch","error","console","log","className","placeholder","name","onChange","target","value","to","type","onClick","this","React","Component"],"mappings":"6KAEeA,IAFC,uB,4ICkBVC,E,kDAEF,WAAYC,GAAO,IAAD,uBACd,cAAMA,IAaVC,cAAgB,SAACC,GACbA,EAAEC,iBAUFC,IAAMC,KAAK,UAAGC,KAAH,eAAgC,CACvCC,SAAU,EAAKC,MAAMD,SACrBE,MAAO,EAAKD,MAAMC,MAClBC,SAAU,EAAKF,MAAME,SACrBC,KAAM,EAAKH,MAAMG,KACjBC,YAAa,EAAKJ,MAAMI,cAEzBC,MAAK,WACJC,OAAOC,SAASC,KAAhB,UAA0BF,OAAOG,OAAjC,eAjCU,EAqClBC,aAAgB,SAACC,GACb,EAAKC,SAASD,IApCd,IAAME,EAASC,aAAaC,QAAQ,QAFtB,MAGD,IAAVF,QAA0BG,GAAVH,IAAqBP,OAAOC,SAASC,KAAhB,UAAyBF,OAAOG,OAAhC,aACxC,EAAKT,MAAQ,CACTiB,YAAa,GACblB,SAAU,GACVE,MAAO,GACPC,SAAU,GACVC,KAAM,GACNC,YAAa,IAVH,E,gEAyCE,IAAD,OAEfR,IAAMsB,IAAI,UAAGpB,KAAH,gBACPO,MAAK,SAACc,GACL,EAAKP,SAAS,CAAEK,YAAaE,EAASC,KAAKA,UAE5CC,OAAM,SAAUC,GACfC,QAAQC,IAAIF,Q,+BAIX,IAAD,OACJ,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACK,eAAC,IAAD,WACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAMG,UAAU,cAAhB,SACI,eAAC,IAAD,WACD,eAAC,IAAD,uBAAiB,sBAAMA,UAAU,cAAhB,kBAChB,cAAC,IAAD,CACAA,UAAU,eACVC,YAAY,iBACZC,KAAK,WACLC,SAAU,SAAClC,GAAD,OAAO,EAAKgB,aAAa,CAAEX,SAAUL,EAAEmC,OAAOC,kBAKhE,cAAC,IAAD,UACI,cAAC,IAAD,CAAML,UAAU,cAAhB,SACI,eAAC,IAAD,WACA,cAAC,IAAD,oBACA,cAAC,IAAD,CACAA,UAAU,eACVE,KAAK,QACLD,YAAY,cACZE,SAAU,SAAClC,GAAD,OAAO,EAAKgB,aAAa,CAAET,MAAOP,EAAEmC,OAAOC,kBAK7D,cAAC,IAAD,UACI,cAAC,IAAD,CAAML,UAAU,cAAhB,SACI,eAAC,IAAD,WACA,eAAC,IAAD,uBAAiB,sBAAMA,UAAU,cAAhB,kBACjB,cAAC,IAAD,CACAA,UAAU,eACVC,YAAY,iBACZC,KAAK,WACLC,SAAU,SAAClC,GAAD,OAAO,EAAKgB,aAAa,CAAER,SAAUR,EAAEmC,OAAOC,kBAsBhE,cAAC,IAAD,UACI,cAAC,IAAD,CAAML,UAAU,cAAhB,SACI,eAAC,IAAD,WACA,cAAC,IAAD,0BACI,cAAC,KAAD,CAAWC,YAAY,oBACtBC,KAAK,cACLC,SAAU,SAAClC,GAAD,OAAO,EAAKgB,aAAa,CAAEN,YAAaV,EAAEmC,OAAOC,kBAKxE,cAAC,IAAD,UACI,cAAC,IAAD,CAAML,UAAU,cAAhB,SACI,eAAC,IAAD,WACG,cAAC,IAAD,CAASM,GAAG,QAAQN,UAAU,cAA9B,oBACA,cAAC,IAAD,CAASO,KAAK,SAASC,QAAWC,KAAKzC,cAAgBgC,UAAU,cAAjE,2C,GAlIPU,IAAMC,WA6IhB7C","file":"static/js/18.3c342a40.chunk.js","sourcesContent":["const serviceAPI = `http://localhost:81`;\n\nexport default serviceAPI","import React from 'react';\nimport axios from 'axios';\nimport ServiceApi from \"../../Service\";\n// import bcrypt from 'bcrypt';\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CSelect,\n    CTextarea,\n    CLabel\n  } from '@coreui/react';\n\nclass CreateUser extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            rolesOption: [],\n            username: '',\n            email: '',\n            password: '',\n            role: '',\n            description: ''\n        }\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        // const rounds = 10;\n        // bcrypt.hash(password, rounds, (err, hash) => {\n        //     if (err) {\n        //       console.error(err)\n        //       return\n        //     }\n        //     console.log(hash)\n        // })\n\n        axios.post(`${ServiceApi}`+`/api/v1/user`, {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            role: this.state.role,\n            description: this.state.description\n        })\n          .then(function () {\n            window.location.href = `${window.origin}/#/user`;\n          })\n    }\n    \n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    componentDidMount(){\n        //   Get Role Option\n        axios.get(`${ServiceApi}`+`/api/v1/role`)\n          .then((response) => {\n            this.setState({ rolesOption: response.data.data });\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                     <CForm>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                            <CLabel>Username <span className=\"text-danger\">*</span></CLabel>\n                             <CInput\n                             className=\"form-control\"\n                             placeholder=\"Enter Username\"\n                             name=\"username\"\n                             onChange={(e) => this.handleChange({ username: e.target.value }) }\n                             />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                             <CLabel>Email</CLabel>\n                             <CInput\n                             className=\"form-control\"\n                             name=\"email\"\n                             placeholder=\"Enter Email\"\n                             onChange={(e) => this.handleChange({ email: e.target.value }) }\n                             />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                             <CLabel>Password <span className=\"text-danger\">*</span></CLabel>\n                             <CInput\n                             className=\"form-control\"\n                             placeholder=\"Enter Password\"\n                             name=\"password\"\n                             onChange={(e) => this.handleChange({ password: e.target.value }) }\n                             />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     {/* <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                 <CLabel>Role</CLabel>\n                                 <CSelect className=\"form-select\"\n                                 onChange={(e) => this.handleChange({ role: e.target.value }) }\n                                 name=\"role\">\n                                     <option>Select Option</option>\n                                     {\n                                        this.state.rolesOption.map((option) => {\n                                            return <option key={ option.id } value={ option.id }>{ option.name }</option>\n                                        })\n                                     }\n                                 </CSelect>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow> */}\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                             <CLabel>Description</CLabel>\n                                 <CTextarea placeholder=\"Enter Description\"\n                                  name=\"description\"\n                                  onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                  />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                <CButton to=\"/user\" className=\"float-right\">Cancel</CButton>\n                                <CButton type=\"submit\" onClick= { this.submitHandler } className=\"float-right\">Save Change</CButton>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\n\nexport default CreateUser;"],"sourceRoot":""}