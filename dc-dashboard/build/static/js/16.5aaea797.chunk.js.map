{"version":3,"sources":["Service.js","screens/role/Role.js"],"names":["serviceAPI","Role","props","fields","key","_style","width","label","roleDelete","axios","delete","ServiceApi","state","id","then","setState","show","window","location","reload","catch","error","console","log","hideAlert","userId","localStorage","getItem","undefined","href","origin","match","params","roles","get","response","data","users","to","className","items","this","tableFilter","itemsPerPageSelect","itemsPerPage","hover","sorter","pagination","scopedSlots","item","size","onClick","format","createdAt","updatedAt","warning","showCancel","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","title","onConfirm","onCancel","React","Component"],"mappings":"6KAEeA,IAFC,uB,gLCaVC,E,kDAEF,WAAYC,GAAO,IAAD,uBACd,cAAMA,IAUVC,OAAS,CACL,CAAEC,IAAK,KAAMC,OAAQ,CAAEC,MAAO,QAC9B,CAAEF,IAAK,OAAQC,OAAQ,CAAEC,MAAO,QAChC,CAAEF,IAAK,cAAeC,OAAQ,CAAEC,MAAO,QACvC,CAAEF,IAAK,YAAaG,MAAO,WAAYF,OAAQ,CAAEC,MAAO,QACxD,CAAEF,IAAK,YAAaG,MAAO,cAAgBF,OAAQ,CAAEC,MAAO,OAC5D,CAAEF,IAAK,YAAaG,MAAO,WAAYF,OAAQ,CAAEC,MAAO,QACxD,CAAEF,IAAK,YAAaG,MAAO,cAAeF,OAAQ,CAAEC,MAAO,OAC3D,CAAEF,IAAK,SAAUC,OAAQ,CAAEC,MAAO,SAnBpB,EAkClBE,WAAa,WACTC,IAAMC,OAAO,UAAGC,KAAH,uBAAgC,EAAKC,MAAMC,KACrDC,MAAK,WACF,EAAKC,SAAS,CAAEC,MAAM,IACtBC,OAAOC,SAASC,YAEnBC,OAAM,SAAUC,GACfC,QAAQC,IAAIF,OAzCF,EA6ClBG,UAAY,WACR,EAAKT,SAAS,CAAEC,MAAM,KA5CtB,IAAMS,EAASC,aAAaC,QAAQ,QAFtB,MAGD,IAAVF,QAA0BG,GAAVH,IAAqBR,OAAOC,SAASW,KAAhB,UAAyBZ,OAAOa,OAAhC,aACxC,EAAKlB,MAAQ,CACTC,GAAI,EAAKX,MAAM6B,MAAMC,OAAOnB,GAC5BG,MAAM,EACNiB,MAAO,IAPG,E,gEAsBG,IAAD,OAEhBxB,IAAMyB,IAAI,UAAGvB,KAAH,gBACPG,MAAK,SAACqB,GACL,EAAKpB,SAAS,CAAEkB,MAAOE,EAASC,KAAKA,OACrCd,QAAQC,IAAI,EAAKX,MAAMyB,UAExBjB,OAAM,SAAUC,GACfC,QAAQC,IAAIF,Q,+BAmBX,IAAD,OACJ,OACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAASiB,GAAG,eAAeC,UAAU,cAArC,qBAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CACAC,MAAOC,KAAK7B,MAAMqB,MAClB9B,OAAQsC,KAAKtC,OACbuC,aAAW,EACXC,oBAAkB,EAClBC,aAAc,EACdC,OAAK,EACLC,QAAM,EACNC,YAAU,EACVC,YAAe,CACX,OACE,SAACC,GAAD,OACE,+BACI,cAAC,IAAD,CAASX,GAAE,qBAAgBW,EAAKpC,IAAM0B,UAAU,yBAAyBW,KAAK,KAA9E,kBAGA,cAAC,IAAD,CAASC,QAAU,kBAAM,EAAKpC,SAAS,CAAEC,MAAM,EAAMH,GAAIoC,EAAKpC,MAAO0B,UAAU,oBAAoBW,KAAK,KAAxG,wBAKR,UACE,SAACD,GAAD,OACE,6BACI,cAAC,IAAD,CAAQG,OAAO,aAAf,SAA8BH,EAAKI,eAG3C,UACE,SAACJ,GAAD,OACE,6BACI,cAAC,IAAD,CAAQG,OAAO,aAAf,SAA8BH,EAAKK,oBAMnD,cAAC,IAAD,CACItC,KAAMyB,KAAK7B,MAAMI,KACjBuC,SAAO,EACPC,YAAU,EACVC,eAAe,kBACfC,kBAAkB,SAClBC,iBAAiB,UACjBC,MAAM,gBACNC,UAAWpB,KAAKjC,WACnBsD,SAAUrB,KAAKjB,mB,GAvGbuC,IAAMC,WA8GV/D","file":"static/js/16.5aaea797.chunk.js","sourcesContent":["const serviceAPI = `http://localhost:81`;\n\nexport default serviceAPI","import React from 'react';\nimport axios from 'axios';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Moment from 'react-moment';\nimport ServiceApi from \"../../Service\";\nimport {\n    CButton,\n    CCardBody,\n    CCardHeader,\n    CDataTable,\n    CCard\n  } from '@coreui/react';\n\nclass Role extends React.Component {\n\n    constructor(props){\n        super(props)\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            id: this.props.match.params.id,\n            show: false,\n            roles: []\n        }\n    }\n\n    fields = [\n        { key: 'id', _style: { width: '10%'} },\n        { key: 'name', _style: { width: '10%'} },\n        { key: 'description', _style: { width: '10%'} },\n        { key: 'createdBy', label: 'Recorder', _style: { width: '10%'} },\n        { key: 'createdAt', label: 'Record Date',  _style: { width: '5%'} },\n        { key: 'updatedBy', label: 'Modifier', _style: { width: '10%'} },\n        { key: 'updatedAt', label: 'Modify Date', _style: { width: '5%'} },\n        { key: 'action', _style: { width: '15%'} }\n    ]\n\n    componentDidMount() {\n        // Get Role Option\n        axios.get(`${ServiceApi}`+`/api/v1/role`)\n          .then((response) => {\n            this.setState({ roles: response.data.data });\n            console.log(this.state.users);\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    roleDelete = () => {\n        axios.delete(`${ServiceApi}`+`/api/v1/user/${this.state.id}`)\n          .then(() => {\n              this.setState({ show: false });\n              window.location.reload();\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    hideAlert = () => {\n        this.setState({ show: false });\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardHeader>\n                    <CButton to=\"/role/create\" className=\"float-right\">+ New</CButton>\n                </CCardHeader>\n                <CCardBody>\n                    <CDataTable\n                    items={this.state.roles}\n                    fields={this.fields}\n                    tableFilter\n                    itemsPerPageSelect\n                    itemsPerPage={5}\n                    hover\n                    sorter\n                    pagination\n                    scopedSlots = {{\n                        'action':\n                          (item)=>(\n                            <td>\n                                <CButton to={`/role/edit/${item.id}`} className=\"btn btn-secondary mr-2\" size='sm'>\n                                   Edit\n                                </CButton>\n                                <CButton onClick={ () => this.setState({ show: true, id: item.id })} className=\"btn btn-danger sm\" size='sm'>\n                                   Delete\n                                </CButton>\n                            </td>\n                        ),\n                        'createdAt':\n                          (item)=>(\n                            <td>\n                                <Moment format=\"YYYY/MM/DD\">{ item.createdAt }</Moment>\n                            </td>\n                        ),\n                        'updatedAt':\n                          (item)=>(\n                            <td>\n                                <Moment format=\"YYYY/MM/DD\">{ item.updatedAt }</Moment>\n                            </td>\n                        )\n                    }}\n                    />\n                </CCardBody>\n                <SweetAlert\n                    show={this.state.show}\n                    warning\n                    showCancel\n                    confirmBtnText=\"Yes, delete it!\"\n                    confirmBtnBsStyle=\"danger\"\n                    cancelBtnBsStyle=\"default\"\n                    title=\"Are you sure?\"\n                    onConfirm={this.roleDelete}\n\t                onCancel={this.hideAlert}\n                />\n            </CCard>\n        );\n    }\n}\n\nexport default Role;"],"sourceRoot":""}