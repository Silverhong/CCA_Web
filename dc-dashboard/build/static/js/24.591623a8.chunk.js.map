{"version":3,"sources":["screens/category/UpdateCategory.js"],"names":["baseUrl","UpdateCategory","props","handleChange","changeObject","setState","submitHandler","e","preventDefault","axios","put","state","id","name","description","then","window","location","href","catch","error","console","log","userId","localStorage","getItem","undefined","match","params","category","get","this","response","data","map","item","onSubmit","className","placeholder","value","onChange","target","to","type","React","Component"],"mappings":"+QAgBQA,EAAU,sBAEZC,E,kDAEF,WAAYC,GAAO,IAAD,uBACd,cAAMA,IAWVC,aAAgB,SAACC,GACb,EAAKC,SAASD,IAbA,EAgBlBE,cAAgB,SAACC,GACbA,EAAEC,iBACFC,IAAMC,IAAI,UAAGV,GAAH,2BAAiC,EAAKW,MAAMC,IAAM,CACxDC,KAAM,EAAKF,MAAME,KACjBC,YAAa,EAAKH,MAAMG,cAEzBC,MAAK,WACHC,OAAOC,SAASC,KAAO,sCAEzBC,OAAO,SAAAC,GACNC,QAAQC,IAAIF,OAxBhB,IAAMG,EAASC,aAAaC,QAAQ,QAFtB,MAGD,IAAVF,QAA0BG,GAAVH,IAAqBP,OAAOC,SAASC,KAAM,iCAC9D,EAAKP,MAAQ,CACTC,GAAI,EAAKV,MAAMyB,MAAMC,OAAOhB,GAC5BC,KAAM,GACNC,YAAa,GACbe,SAAU,IARA,E,gEA8BE,IAAD,OAEfpB,IAAMqB,IAAI,UAAG9B,GAAH,2BAAiC+B,KAAKpB,MAAMC,KACnDG,MAAK,SAACiB,GACH,EAAK3B,SAAS,CAAEwB,SAAUG,EAASC,KAAKA,OACxC,EAAKtB,MAAMkB,SAASK,KAAI,SAAAC,GACpB,EAAK9B,SAAS,CACVQ,KAAMsB,EAAKtB,KACXC,YAAaqB,EAAKrB,oBAI7BK,OAAM,SAAUC,GACfC,QAAQC,IAAIF,Q,+BAIX,IAAD,OACJ,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAOgB,SAAWL,KAAKzB,cAAvB,UACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAM+B,UAAU,eAAhB,UACI,eAAC,IAAD,WACI,eAAC,IAAD,mBAAa,sBAAMA,UAAU,cAAhB,kBACb,cAAC,IAAD,CACAA,UAAU,eACVC,YAAY,aACZzB,KAAK,OACL0B,MAAOR,KAAKpB,MAAME,KAClB2B,SAAU,SAACjC,GAAD,OAAO,EAAKJ,aAAa,CAAEU,KAAMN,EAAEkC,OAAOF,cAGxD,eAAC,IAAD,WACI,cAAC,IAAD,0BACA,cAAC,KAAD,CACAF,UAAU,eACVC,YAAY,oBACZzB,KAAK,cACL0B,MAAOR,KAAKpB,MAAMG,YAClB0B,SAAU,SAACjC,GAAD,OAAO,EAAKJ,aAAa,CAAEW,YAAaP,EAAEkC,OAAOF,mBAKvE,cAAC,IAAD,UACC,cAAC,IAAD,CAAMF,UAAU,cAAhB,SACI,eAAC,IAAD,WACG,cAAC,IAAD,CAASK,GAAG,YAAYL,UAAU,cAAlC,oBACA,cAAC,IAAD,CAASM,KAAK,SAASN,UAAU,cAAjC,2C,GAlFHO,IAAMC,WA4FpB5C","file":"static/js/24.591623a8.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom'\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CTextarea,\n    CLabel\n  } from '@coreui/react';\n\n  const baseUrl = 'http://localhost:81';\n\nclass UpdateCategory extends React.Component { \n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =\"http://localhost:3000/#/login\";\n        this.state = {\n            id: this.props.match.params.id,\n            name: '',\n            description: '',\n            category: []\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        axios.put(`${baseUrl}`+`/api/v1/category/${this.state.id}`, {\n            name: this.state.name,\n            description: this.state.description\n        })\n          .then(function () {\n             window.location.href = \"http://localhost:3000/#/category\";\n          })\n          .catch( error => {\n            console.log(error);\n          })\n    }\n\n    componentDidMount(){\n        // Get Category Option\n        axios.get(`${baseUrl}`+`/api/v1/category/${this.state.id}`)\n          .then((response) => {\n              this.setState({ category: response.data.data });\n              this.state.category.map(item => {\n                  this.setState({\n                      name: item.name,\n                      description: item.description\n                  })\n              });\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                    <CForm onSubmit={ this.submitHandler }>\n                        <CRow>\n                            <CCol className=\"md-12 xs-12z\">\n                                <CFormGroup>\n                                    <CLabel>Name <span className=\"text-danger\">*</span></CLabel>\n                                    <CInput\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Name\"\n                                    name=\"name\"\n                                    value={this.state.name}\n                                    onChange={(e) => this.handleChange({ name: e.target.value }) }\n                                    />\n                                </CFormGroup>\n                                <CFormGroup>\n                                    <CLabel>Description</CLabel>\n                                    <CTextarea\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Description\"\n                                    name=\"description\"\n                                    value={this.state.description}\n                                    onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                    />\n                                </CFormGroup>\n                            </CCol>\n                        </CRow>\n                        <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                <CButton to=\"/category\" className=\"float-right\">Cancel</CButton>\n                                <CButton type=\"submit\" className=\"float-right\">Save Change</CButton>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                    </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\nexport default UpdateCategory;"],"sourceRoot":""}