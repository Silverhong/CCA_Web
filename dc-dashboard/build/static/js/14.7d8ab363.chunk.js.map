{"version":3,"sources":["Service.js","screens/post/UpdatePost.js"],"names":["serviceAPI","config","headers","UpdatePost","props","handleChange","changeObject","setState","submitHandler","e","preventDefault","postOject","state","file","axios","delete","ServiceApi","fileName","fd","FormData","append","post","then","respone","data","filename","title","barcode","thumbnail","description","body","category_id","put","id","window","location","href","origin","catch","error","console","log","userId","localStorage","getItem","undefined","match","params","content","handleWYSIWYGInput","editor","ClassicEditor","url","category","categoryOption","tagOption","event","this","target","files","URL","createObjectURL","get","posts","map","item","onSubmit","className","placeholder","name","value","onChange","rows","cols","ckfinder","uploadUrl","getData","src","alt","type","handleUploadChange","for","option","selected","to","React","Component"],"mappings":"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","file":"static/js/14.7d8ab363.chunk.js","sourcesContent":["const serviceAPI = `http://localhost:81`;\n\nexport default serviceAPI","import React from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport axios from 'axios';\nimport ServiceApi from \"../../Service\";\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CLabel,\n    CButton,\n    CSelect,\n    CCardFooter,\n    CTextarea\n  } from '@coreui/react';\n  const config = {\n    headers: {\n        'content-type': 'multipart/form-data',\n        'Accept': '*'\n    }\n};\n\nclass UpdatePost extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            id: this.props.match.params.id,\n            content: props.content,\n            handleWYSIWYGInput: props.handleWYSIWYGInput,\n            editor: ClassicEditor,\n            title: '',\n            barcode: '',\n            file: [],\n            description: '',\n            body: '',\n            fileName: '',\n            url: 'avatars/no_image.png',\n            category: '',\n            categoryOption: [],\n            tagOption: []\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    handleUploadChange(event) {\n        this.setState({\n          file: event.target.files[0],\n          url: URL.createObjectURL(event.target.files[0])\n        })\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        let postOject = [];\n        if(!(this.state.file == '')){\n            ///Delete old file\n            axios.delete(`${ServiceApi}/api/v1/delete/file/${this.state.fileName}`);\n\n            // Upload file\n            let fd = new FormData();\n            fd.append('file', this.state.file);\n\n            axios.post(`${ServiceApi}/api/v1/upload`, fd, config)\n            .then( respone => {\n                this.setState({ file: respone.data.filename})\n                postOject = {\n                    title: this.state.title,\n                    barcode: this.state.barcode,\n                    thumbnail: this.state.file,\n                    description: this.state.description,\n                    body: this.state.body,\n                    category_id: this.state.category_id,\n                }\n                \n                // Update post\n                axios.put(`${ServiceApi}`+`/api/v1/post/${this.state.id}`, postOject)\n                .then(function () {\n                    window.location.href = `${window.origin}/#/post`;\n                })\n                .catch( error => {\n                    console.log(error);\n                })\n            })\n            .catch( error => console.log(error))\n        }else{\n            postOject = {\n                title: this.state.title,\n                barcode: this.state.barcode,\n                description: this.state.description,\n                body: this.state.body,\n                category_id: this.state.category_id\n            }\n\n            // Update post\n            axios.put(`${ServiceApi}`+`/api/v1/post/${this.state.id}`, postOject)\n            .then(function () {\n                window.location.href = `${window.origin}/#/post`;\n            })\n            .catch( error => {\n                console.log(error);\n            })\n        }\n    }\n\n    componentDidMount(){\n        // Get Post edit\n        axios.get(`${ServiceApi}/api/v1/post/${this.state.id}`)\n        .then((respone) => {\n            this.setState({\n                posts: respone.data.data\n            });\n            this.state.posts.map(item => {\n                this.setState({ \n                    category: item.category_id,\n                    description: item.description,\n                    body: item.body,\n                    title: item.title,\n                    url: `${ServiceApi}/uploads/${item.thumbnail}`,\n                    barcode: item.barcode,\n                    fileName: item.thumbnail\n                 });\n            })\n        })\n        .catch( error => {\n            console.log(error);\n        })\n        // Get Category All \n        axios.get(`${ServiceApi}/api/v1/category`)\n        .then((respone) => {\n            this.setState({\n                categoryOption: respone.data.data\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n        // Get Tag\n        axios.get(`${ServiceApi}/api/v1/tag`)\n        .then((respone) => {\n            this.setState({\n                tagOption: respone.data.data\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                <CForm onSubmit={this.submitHandler}>\n                    <CRow>\n                        <CCol className=\"col-md-8 xs-8\">\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Post Name <span className=\"text-danger\">*</span></CLabel>\n                                    <CInput\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Post Name\"\n                                    name=\"title\"\n                                    value={this.state.title}\n                                    onChange={(e) => this.handleChange({ title: e.target.value }) }\n                                    />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Post Code </CLabel>\n                                    <CInput\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Post Code\"\n                                    name=\"barcode\"\n                                    value={this.state.barcode}\n                                    onChange={(e) => this.handleChange({ barcode: e.target.value }) }\n                                    />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Description</CLabel>\n                                    <CTextarea\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Description\"\n                                    name=\"description\"\n                                    rows=\"6\"\n                                    cols=\"4\"\n                                    value={ this.state.description }\n                                    onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                    />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Content</CLabel>\n                                    <CKEditor\n                                    editor={ ClassicEditor }\n                                    data={this.state.body}\n                                    config={{ckfinder: {\n                                        // Upload the images to the server using the CKFinder QuickUpload command\n                                        // You have to change this address to your server that has the ckfinder php connector\n                                        uploadUrl: `${ServiceApi}/api/v1/uploader`\n                                    }}}\n\n                                    onChange={ ( event, editor ) => {\n                                        const data = editor.getData();\n                                        this.setState({ body: data});\n                                        console.log(this.state.body)\n                                    } }\n                                />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                        </CCol>\n                        <CCol className=\"col-md-4 col-xs-4\">\n                            <CCard>\n                                <CCardBody>\n                                <CCard>\n                                     <CCardBody>\n                                     <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                                <img src={`${this.state.url}`} alt=\"logo\" className=\"img-fluid\"></img>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                     </CCardBody>\n                                     <CCardFooter>\n                                     <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                                <div className=\"input-group mb-3\">\n                                                    <div className=\"input-group-prepend\">\n                                                        <span className=\"input-group-text\">Upload</span>\n                                                    </div>\n                                                    <div className=\"custom-file\">\n                                                    <input type=\"file\" \n                                                    className=\"custom-file-input\" id=\"inputGroupFile01\"\n                                                    className=\"custom-file-input\"\n                                                    onChange={(e) => this.handleUploadChange(e)}\n                                                    />\n                                                    <label className=\"custom-file-label\" for=\"inputGroupFile01\">Choose Image</label>\n                                                    </div>\n                                                </div>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                     </CCardFooter>\n                                 </CCard>\n                                    <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                            <CLabel>Menu Post <span className=\"text-danger\">*</span></CLabel>\n                                            <CSelect \n                                            name=\"category_id\"\n                                            onChange={(e) => this.handleChange({ category_id: e.target.value }) }\n                                            >\n                                                {\n                                                    this.state.categoryOption.map(option => {\n                                                     return  <option selected={this.state.category == option.id} key={option.id} value={option.id}>{option.name}</option>\n                                                    })\n                                                }\n                                            </CSelect>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                </CCardBody>\n                            </CCard>\n                        </CCol>\n                    </CRow>\n                    <CRow>\n                        <CCol className=\"md-12 xs-12\">\n                            <CFormGroup>\n                                <CButton type=\"submit\" className=\"float-right\">Public</CButton>\n                                <CButton to=\"/post\" className=\"float-right\">Cancel</CButton>\n                            </CFormGroup>\n                        </CCol>\n                    </CRow>\n                </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\nexport default UpdatePost;"],"sourceRoot":""}