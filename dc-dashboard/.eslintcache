[{"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/index.js":"1","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/polyfill.js":"2","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/App.js":"3","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/serviceWorker.js":"4","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/store.js":"5","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/assets/icons/index.js":"6","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/views/pages/page500/Page500.js":"7","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/assets/icons/sygnet.js":"8","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/assets/icons/logo.js":"9","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/assets/icons/logo-negative.js":"10","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/views/pages/page404/Page404.js":"11","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/views/pages/register/Register.js":"12","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheLayout.js":"13","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/authentication/login/Login.js":"14","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/index.js":"15","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/Service.js":"16","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheHeaderDropdownTasks.js":"17","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheHeaderDropdown.js":"18","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheFooter.js":"19","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheHeader.js":"20","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheSidebar.js":"21","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheHeaderDropdownMssg.js":"22","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheContent.js":"23","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheHeaderDropdownNotif.js":"24","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/_nav.js":"25","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/routes.js":"26","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/user/UpdateUser.js":"27","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/home/Home.js":"28","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/user/CreateUser.js":"29","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/user/User.js":"30","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/role/CreateRole.js":"31","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/post/Post.js":"32","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/role/Role.js":"33","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/role/UpdateRole.js":"34","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/category/CreateCategory.js":"35","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/post/CreatePost.js":"36","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/post/UpdatePost.js":"37","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/category/UpdateCategory.js":"38","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/tag/CreateTag.js":"39","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/tag/UpdateTag.js":"40","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/category/Category.js":"41","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/tag/Tag.js":"42","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/menu/UpdateMenu.js":"43","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/company/Company.js":"44","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/menu/Menu.js":"45","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/company/UpdateCompany.js":"46"},{"size":718,"mtime":1608625608855,"results":"47","hashOfConfig":"48"},{"size":1429,"mtime":1608625608856,"results":"49","hashOfConfig":"48"},{"size":1403,"mtime":1608625608850,"results":"50","hashOfConfig":"48"},{"size":4686,"mtime":1608625608863,"results":"51","hashOfConfig":"48"},{"size":324,"mtime":1608625608863,"results":"52","hashOfConfig":"48"},{"size":3813,"mtime":1608625608850,"results":"53","hashOfConfig":"48"},{"size":1313,"mtime":1608625608876,"results":"54","hashOfConfig":"48"},{"size":978,"mtime":1608625608853,"results":"55","hashOfConfig":"48"},{"size":6920,"mtime":1608625608853,"results":"56","hashOfConfig":"48"},{"size":6933,"mtime":1608625608853,"results":"57","hashOfConfig":"48"},{"size":1294,"mtime":1608625608876,"results":"58","hashOfConfig":"48"},{"size":2864,"mtime":1608625608877,"results":"59","hashOfConfig":"48"},{"size":413,"mtime":1608625608855,"results":"60","hashOfConfig":"48"},{"size":4687,"mtime":1608625608857,"results":"61","hashOfConfig":"48"},{"size":596,"mtime":1608625608855,"results":"62","hashOfConfig":"48"},{"size":68,"mtime":1611111167505,"results":"63","hashOfConfig":"48"},{"size":2253,"mtime":1608625608855,"results":"64","hashOfConfig":"48"},{"size":1032,"mtime":1608625608854,"results":"65","hashOfConfig":"48"},{"size":561,"mtime":1608625608853,"results":"66","hashOfConfig":"48"},{"size":2891,"mtime":1608625608854,"results":"67","hashOfConfig":"48"},{"size":1327,"mtime":1608625608855,"results":"68","hashOfConfig":"48"},{"size":4788,"mtime":1608625608854,"results":"69","hashOfConfig":"48"},{"size":1103,"mtime":1608625608853,"results":"70","hashOfConfig":"48"},{"size":2543,"mtime":1608625608854,"results":"71","hashOfConfig":"48"},{"size":1593,"mtime":1608625608855,"results":"72","hashOfConfig":"48"},{"size":3024,"mtime":1608625608857,"results":"73","hashOfConfig":"48"},{"size":6915,"mtime":1608625608862,"results":"74","hashOfConfig":"48"},{"size":4562,"mtime":1608625608859,"results":"75","hashOfConfig":"48"},{"size":5877,"mtime":1608625608862,"results":"76","hashOfConfig":"48"},{"size":4368,"mtime":1608625608862,"results":"77","hashOfConfig":"48"},{"size":5852,"mtime":1608625608860,"results":"78","hashOfConfig":"48"},{"size":4582,"mtime":1611210704799,"results":"79","hashOfConfig":"48"},{"size":4136,"mtime":1608625608860,"results":"80","hashOfConfig":"48"},{"size":6547,"mtime":1608625608860,"results":"81","hashOfConfig":"48"},{"size":3394,"mtime":1608625608858,"results":"82","hashOfConfig":"48"},{"size":11658,"mtime":1608625608859,"results":"83","hashOfConfig":"48"},{"size":12762,"mtime":1608625608860,"results":"84","hashOfConfig":"48"},{"size":3801,"mtime":1608625608858,"results":"85","hashOfConfig":"48"},{"size":3259,"mtime":1608625608861,"results":"86","hashOfConfig":"48"},{"size":3951,"mtime":1608625608861,"results":"87","hashOfConfig":"48"},{"size":2694,"mtime":1608625608857,"results":"88","hashOfConfig":"48"},{"size":3572,"mtime":1608625608861,"results":"89","hashOfConfig":"48"},{"size":7662,"mtime":1608625608859,"results":"90","hashOfConfig":"48"},{"size":3408,"mtime":1611210131805,"results":"91","hashOfConfig":"48"},{"size":2349,"mtime":1608625608859,"results":"92","hashOfConfig":"48"},{"size":11378,"mtime":1608625608858,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"qzj6f7",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"96"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"96"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"96"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"96"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"96"},"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/index.js",[],["213","214"],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/polyfill.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/App.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/serviceWorker.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/store.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/assets/icons/index.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/views/pages/page500/Page500.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/assets/icons/sygnet.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/assets/icons/logo.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/assets/icons/logo-negative.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/views/pages/page404/Page404.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/views/pages/register/Register.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheLayout.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/authentication/login/Login.js",["215","216"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport ServiceApi from \"../../../Service\";\nimport CIcon from '@coreui/icons-react';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react';\n\nconst backgroundImage = {\n  width: \"100%\",\n  height: \"400px\",\n  backgroundImage: \"url(/avatars/background.jpg)\"\n}\n\nclass Login extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      users: [],\n      show: false,\n      message: ''\n    }\n  }\n\n  handleChange  = (changeObject) => {\n    this.setState(changeObject);\n  }\n\n  hideAlert = () => {\n    this.setState({ show: false });\n  }\n\n  formReset = () => {\n    document.getElementById(\"userForm\").reset();\n  }\n\n  handleSubmitLogin = (e) => {\n    e.preventDefault();\n\n    // check login \n    let email = this.state.email;\n    let password = this.state.password;\n\n    // Get User Data\n    axios.post(`${ServiceApi}/api/v1/login`, {\n      email: email,\n      password: password\n    }).then( respone => {\n\n      this.setState({ users: respone.data.data });\n      if(!respone.data.message == 0){\n        // Store User seesion ID\n        localStorage.setItem('uuid', this.state.users);\n\n        // Set TimeOut alert\n        this.setState({ \n          show: true,\n          message: 'Login Successfully.'\n        });\n        setTimeout(function(){\n          window.location.href = `${window.origin}/#/home`;\n        }, 2000);\n      }else{\n        this.setState({ \n          show: true,\n          message: 'Your email and password is incorrect!'\n        });\n      }\n    })\n  }\n\n  render(){\n    return (\n      <div style={ backgroundImage } className=\"c-app c-default-layout flex-row align-items-center\">\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"6\">\n              <CCardGroup>\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    <CForm id=\"userForm\" onSubmit={this.handleSubmitLogin}>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      <CInputGroup className=\"mb-3\">\n                        <CInputGroupPrepend>\n                          <CInputGroupText>\n                            <CIcon name=\"cil-user\" />\n                          </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput type=\"text\" \n                        name=\"email\" \n                        placeholder=\"Enter Email\" \n                        autoComplete=\"email\"\n                        onChange={(e) => this.handleChange({ email: e.target.value }) }\n                        />\n                      </CInputGroup>\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupPrepend>\n                          <CInputGroupText>\n                            <CIcon name=\"cil-lock-locked\" />\n                          </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput type=\"password\" \n                        name=\"password\"\n                        placeholder=\"Enter Password\" \n                        autoComplete=\"current-password\"\n                        onChange={(e) => this.handleChange({ password: e.target.value }) }\n                        />\n                      </CInputGroup>\n                      <CRow>\n                        <CCol xs=\"6\">\n                          <CButton type=\"submit\" color=\"secondary\" className=\"px-4\">Login</CButton>\n                        </CCol>\n                        <CCol xs=\"6\" className=\"text-right\">\n                        <CButton color=\"danger\" onClick={() => this.formReset() } className=\"px-4\">Reset</CButton>\n                        </CCol>\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n          {/* Sweet Alert */}\n          <SweetAlert\n                    show={this.state.show}\n                    warning\n                    showCancel\n                    confirmBtnText=\"Okay\"\n                    confirmBtnBsStyle=\"danger\"\n                    cancelBtnBsStyle=\"default\"\n                    title={this.state.message}\n                    onConfirm={this.hideAlert}\n\t                  onCancel={this.hideAlert}\n                />\n        </CContainer>\n      </div>\n    )\n  }\n}\nexport default Login;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/index.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/Service.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheHeaderDropdownTasks.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheHeaderDropdown.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheFooter.js",["217"],"import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst TheFooter = () => {\n  return (\n    <CFooter fixed={false}>\n      <div>\n        <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\"></a>\n        <span className=\"ml-1\">&copy; 2020 creativeLabs.</span>\n      </div>\n      <div className=\"mfs-auto\">\n        <span className=\"mr-1\">Powered by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">DC Version 1.0</a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(TheFooter)\n","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheHeader.js",["218","219","220","221"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav,\n  CHeaderNavItem,\n  CHeaderNavLink,\n  CSubheader,\n  CBreadcrumbRouter,\n  CLink\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n// routes config\nimport routes from '../routes'\n\nimport { \n  TheHeaderDropdown,\n  TheHeaderDropdownMssg,\n  TheHeaderDropdownNotif,\n  TheHeaderDropdownTasks\n}  from './index'\n\nconst TheHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector(state => state.sidebarShow)\n\n  const toggleSidebar = () => {\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  const toggleSidebarMobile = () => {\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\n      </CHeaderBrand>\n\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\n        <CHeaderNavItem className=\"px-3\" >\n          <CHeaderNavLink to=\"/home\">Dashboard</CHeaderNavLink>\n        </CHeaderNavItem>\n        {/* <CHeaderNavItem  className=\"px-3\">\n          <CHeaderNavLink to=\"/users\">Users</CHeaderNavLink>\n        </CHeaderNavItem> */}\n        {/* <CHeaderNavItem className=\"px-3\">\n          <CHeaderNavLink>Settings</CHeaderNavLink>\n        </CHeaderNavItem> */}\n      </CHeaderNav>\n\n      <CHeaderNav className=\"px-3\">\n        {/* <TheHeaderDropdownNotif/> */}\n        {/* <TheHeaderDropdownTasks/> */}\n        {/* <TheHeaderDropdownMssg/> */}\n        <TheHeaderDropdown/>\n      </CHeaderNav>\n\n      <CSubheader className=\"px-3 justify-content-between\">\n        <CBreadcrumbRouter \n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\" \n          routes={routes} \n        />\n          {/* <div className=\"d-md-down-none mfe-2 c-subheader-nav\">\n            <CLink className=\"c-subheader-nav-link\"href=\"#\">\n              <CIcon name=\"cil-speech\" alt=\"Settings\" />\n            </CLink>\n            <CLink \n              className=\"c-subheader-nav-link\" \n              aria-current=\"page\" \n              to=\"/dashboard\"\n            >\n              <CIcon name=\"cil-graph\" alt=\"Dashboard\" />&nbsp;Dashboard\n            </CLink>\n            <CLink className=\"c-subheader-nav-link\" href=\"#\">\n              <CIcon name=\"cil-settings\" alt=\"Settings\" />&nbsp;Settings\n            </CLink>\n          </div> */}\n      </CSubheader>\n    </CHeader>\n  )\n}\n\nexport default TheHeader\n","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheSidebar.js",["222","223"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\n\n// sidebar nav config\nimport navigation from './_nav'\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch()\n  const show = useSelector(state => state.sidebarShow)\n\n  return (\n    <CSidebar\n      show={show}\n      onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\n    >\n      {/* <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n        <CIcon\n          className=\"c-sidebar-brand-full\"\n          name=\"logo-negative\"\n          height={35}\n        />\n        <CIcon\n          className=\"c-sidebar-brand-minimized\"\n          name=\"sygnet\"\n          height={35}\n        />\n      </CSidebarBrand> */}\n      <CSidebarNav>\n\n        <CCreateElement\n          items={navigation}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle\n          }}\n        />\n      </CSidebarNav>\n      <CSidebarMinimizer className=\"c-d-md-down-none\"/>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(TheSidebar)\n","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheHeaderDropdownMssg.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheContent.js",["224"],"import React, { Suspense } from 'react'\nimport {\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n  \nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\nconst TheContent = () => {\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                    <CFade>\n                      <route.component {...props} />\n                    </CFade>\n                  )} />\n              )\n            })}\n            {/* <Redirect from=\"/\" to=\"/dashboard\" /> */}\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/TheHeaderDropdownNotif.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/containers/_nav.js",["225"],"import React from 'react'\nimport CIcon from '@coreui/icons-react';\n\nexport default [\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Dashboard',\n    to: '/home',\n    icon: <CIcon name=\"cil-home\" customClasses=\"c-sidebar-nav-icon\"/>,\n    badge: {\n      color: 'info',\n      // text: 'NEW',\n    }\n  },\n  {\n    _tag: 'CSidebarNavTitle',\n    _children: ['Components']\n  },\n  {\n    _tag: 'CSidebarNavDropdown',\n    name: 'Authentications',\n    route: '/authentication',\n    icon: 'cil-user',\n    _children: [\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Users',\n        to: '/user',\n      },\n      // {\n      //   _tag: 'CSidebarNavItem',\n      //   name: 'Roles',\n      //   to: '/role',\n      // }\n    ],\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Companies',\n    to: '/company',\n    icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,\n    badge: {\n      color: 'info'\n    }\n  },\n  // {\n  //   _tag: 'CSidebarNavDropdown',\n  //   name: 'Menu Setup',\n  //   route: '/menu',\n  //   icon: 'cil-list-rich',\n  //   _children: [\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Menu',\n  //       to: '/menu',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Categories',\n  //       to: '/category',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Tags',\n  //       to: '/tag',\n  //     },\n  //   ],\n  // },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Posts',\n    to: '/post',\n    icon: <CIcon name=\"cil-list\" customClasses=\"c-sidebar-nav-icon\"/>,\n    badge: {\n      color: 'info'\n    }\n  },\n]\n\n","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/routes.js",[],"/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/user/UpdateUser.js",["226","227","228","229","230","231","232","233","234"],"import React from 'react';\nimport axios from 'axios';\nimport ServiceApi from \"../../Service\";\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CSelect,\n    CTextarea,\n    CLabel\n  } from '@coreui/react';\n\nclass UpdateUser extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            id: this.props.match.params.id,\n            users: [],\n            rolesOption: [],\n            username: '',\n            email: '',\n            password: '',\n            roleSelected: '',\n            description: ''\n        }\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        let userObject = [];\n        if(this.state.password == '' || this.state.password == undefined ){\n            userObject = {\n                username: this.state.username,\n                email: this.state.email,\n                role_id: this.state.role,\n                description: this.state.description\n            }\n        }else{\n            userObject = {\n                username: this.state.username,\n                email: this.state.email,\n                password: this.state.password,\n                role_id: this.state.role,\n                description: this.state.description\n            }\n        }\n\n        console.log(userObject);\n        axios.put(`${ServiceApi}`+`/api/v1/user/${this.state.id }`, userObject )\n          .then(function () {\n            window.location.href=`${window.origin}/#/user`;\n          })\n    }\n    \n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    componentDidMount(){\n        ////// Get roles\n        axios.get(`${ServiceApi}`+`/api/v1/role`)\n          .then((response) => {\n            this.setState({ rolesOption: response.data.data });\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n\n          ////// Get User one\n          axios.get(`${ServiceApi}`+`/api/v1/user/${this.state.id}`)\n          .then((response) => {\n              this.setState({ users: response.data.data });\n            this.state.users.map( item => {\n                this.setState({\n                    username: item.username,\n                    email: item.email,\n                    roleSelected: item.role_id,\n                    description: item.description\n                });\n            });\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                     <CForm>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                            <CLabel>Username <span className=\"text-danger\">*</span></CLabel>\n                             <CInput\n                             className=\"form-control\"\n                             placeholder=\"Enter Username\"\n                             name=\"username\"\n                             value= { this.state.username}\n                             onChange={(e) => this.handleChange({ username: e.target.value }) }\n                             />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                             <CLabel>Email</CLabel>\n                             <CInput\n                             className=\"form-control\"\n                             name=\"email\"\n                             placeholder=\"Enter Email\"\n                             value= { this.state.email}\n                             onChange={(e) => this.handleChange({ email: e.target.value }) }\n                             />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                             <CLabel>Password <span className=\"text-danger\">*</span></CLabel>\n                             <CInput\n                             className=\"form-control\"\n                             placeholder=\"Enter Password\"\n                             name=\"password\"\n                             value= { this.state.password}\n                             onChange={(e) => this.handleChange({ password: e.target.value }) }\n                             />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     {/* <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                 <CLabel>Role</CLabel>\n                                 <CSelect className=\"form-select\"\n                                 onChange={(e) => this.handleChange({ role: e.target.value }) }\n                                 name=\"role\">\n                                     <option>Select Option</option>\n                                     {this.state.rolesOption.map((option) => (\n                                        <option selected={this.state.roleSelected == option.id } key={option.id} value={option.id}>{option.name}</option>\n                                    ))}\n                                 </CSelect>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow> */}\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                             <CLabel>Description</CLabel>\n                                 <CTextarea placeholder=\"Enter Description\"\n                                  name=\"description\"\n                                  value= { this.state.description}\n                                  onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                  />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                <CButton to=\"/user\" className=\"float-right\">Cancel</CButton>\n                                <CButton type=\"submit\" onClick= { this.submitHandler } className=\"float-right\">Save Change</CButton>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\n\nexport default UpdateUser;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/home/Home.js",["235","236","237","238","239","240","241","242"],"import React from 'react';\nimport axios from 'axios';\nimport ServiceApi from \"../../Service\";\n\nclass Home extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            userCount: 0,\n            postCount: 0\n        }\n    }\n\n    componentDidMount(){\n        // Get Count User\n        axios.get(`${ServiceApi}/api/v1/user/count/all`)\n        .then((respone) => {\n            this.setState({\n                userCount: respone.data.data\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n\n        // Get Count Post\n        axios.get(`${ServiceApi}/api/v1/post/count/all`)\n        .then((respone) => {\n            this.setState({\n                postCount: respone.data.data\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"row\">\n                  <div className=\"col-sm-6 col-lg-3\">\n                    <div className=\"card text-white bg-gradient-primary\">\n                    <div className=\"card-body card-body pb-0 d-flex justify-content-between align-items-start\">\n                        <div>\n                        <div className=\"text-value-lg\">{this.state.postCount} post</div>\n                        <div>Posts online</div>\n                        </div>\n                        <div className=\"btn-group\">\n                        <button className=\"btn btn-transparent p-0\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <svg className=\"c-icon\">\n                            <use xlinkHref=\"vendors/@coreui/icons/svg/free.svg#cil-settings\" />\n                            </svg>\n                        </button>\n                        <div className=\"dropdown-menu dropdown-menu-right\"><a className=\"dropdown-item\" href=\"#\">Action</a><a className=\"dropdown-item\" href=\"#\">Another action</a><a className=\"dropdown-item\" href=\"#\">Something else here</a></div>\n                        </div>\n                    </div>\n                    <div className=\"c-chart-wrapper mt-3 mx-3\" style={{height: 70}}><div className=\"chartjs-size-monitor\"><div className=\"chartjs-size-monitor-expand\"><div className /></div><div className=\"chartjs-size-monitor-shrink\"><div className /></div></div>\n                        <canvas className=\"chart chartjs-render-monitor\" id=\"card-chart1\" height={70} style={{display: 'block', width: 204, height: 70}} width={204} />\n                    </div>\n                    </div>\n                </div>\n\n                <div className=\"col-sm-6 col-lg-3\">\n                    <div className=\"card text-white bg-gradient-info\">\n                        <div className=\"card-body card-body pb-0 d-flex justify-content-between align-items-start\">\n                            <div>\n                                <div className=\"text-value-lg\">{this.state.userCount} user</div>\n                                <div>Users online</div>\n                            </div>\n                            <div className=\"btn-group\">\n                            <button className=\"btn btn-transparent p-0\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <svg className=\"c-icon\">\n                                <use xlinkHref=\"vendors/@coreui/icons/svg/free.svg#cil-settings\" />\n                                </svg>\n                            </button>\n                            <div className=\"dropdown-menu dropdown-menu-right\"><a className=\"dropdown-item\" href=\"#\">Action</a><a className=\"dropdown-item\" href=\"#\">Another action</a><a className=\"dropdown-item\" href=\"#\">Something else here</a></div>\n                            </div>\n                        </div>\n                        <div className=\"c-chart-wrapper mt-3 mx-3\" style={{height: 70}}><div className=\"chartjs-size-monitor\"><div className=\"chartjs-size-monitor-expand\"><div className /></div><div className=\"chartjs-size-monitor-shrink\"><div className /></div></div>\n                            <canvas className=\"chart chartjs-render-monitor\" id=\"card-chart2\" height={70} width={204} style={{display: 'block', width: 204, height: 70}} />\n                        </div>\n                    </div>\n                </div>\n                </div> \n        );\n    }\n}\n\nexport default Home;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/user/CreateUser.js",["243","244","245","246","247"],"import React from 'react';\nimport axios from 'axios';\nimport ServiceApi from \"../../Service\";\n// import bcrypt from 'bcrypt';\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CSelect,\n    CTextarea,\n    CLabel\n  } from '@coreui/react';\n\nclass CreateUser extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            rolesOption: [],\n            username: '',\n            email: '',\n            password: '',\n            role: '',\n            description: ''\n        }\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        // const rounds = 10;\n        // bcrypt.hash(password, rounds, (err, hash) => {\n        //     if (err) {\n        //       console.error(err)\n        //       return\n        //     }\n        //     console.log(hash)\n        // })\n\n        axios.post(`${ServiceApi}`+`/api/v1/user`, {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            role: this.state.role,\n            description: this.state.description\n        })\n          .then(function () {\n            window.location.href = `${window.origin}/#/user`;\n          })\n    }\n    \n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    componentDidMount(){\n        //   Get Role Option\n        axios.get(`${ServiceApi}`+`/api/v1/role`)\n          .then((response) => {\n            this.setState({ rolesOption: response.data.data });\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                     <CForm>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                            <CLabel>Username <span className=\"text-danger\">*</span></CLabel>\n                             <CInput\n                             className=\"form-control\"\n                             placeholder=\"Enter Username\"\n                             name=\"username\"\n                             onChange={(e) => this.handleChange({ username: e.target.value }) }\n                             />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                             <CLabel>Email</CLabel>\n                             <CInput\n                             className=\"form-control\"\n                             name=\"email\"\n                             placeholder=\"Enter Email\"\n                             onChange={(e) => this.handleChange({ email: e.target.value }) }\n                             />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                             <CLabel>Password <span className=\"text-danger\">*</span></CLabel>\n                             <CInput\n                             className=\"form-control\"\n                             placeholder=\"Enter Password\"\n                             name=\"password\"\n                             onChange={(e) => this.handleChange({ password: e.target.value }) }\n                             />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     {/* <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                 <CLabel>Role</CLabel>\n                                 <CSelect className=\"form-select\"\n                                 onChange={(e) => this.handleChange({ role: e.target.value }) }\n                                 name=\"role\">\n                                     <option>Select Option</option>\n                                     {\n                                        this.state.rolesOption.map((option) => {\n                                            return <option key={ option.id } value={ option.id }>{ option.name }</option>\n                                        })\n                                     }\n                                 </CSelect>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow> */}\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                             <CLabel>Description</CLabel>\n                                 <CTextarea placeholder=\"Enter Description\"\n                                  name=\"description\"\n                                  onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                  />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                <CButton to=\"/user\" className=\"float-right\">Cancel</CButton>\n                                <CButton type=\"submit\" onClick= { this.submitHandler } className=\"float-right\">Save Change</CButton>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\n\nexport default CreateUser;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/user/User.js",["248","249","250","251","252"],"import React from 'react';\nimport axios from 'axios';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Moment from 'react-moment';\nimport ServiceApi from \"../../Service\";\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CDataTable\n  } from '@coreui/react';\n\nclass User extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            id: this.props.match.params.id,\n            users: [],\n            show: false,\n            messageAlert: ''\n        }\n    }\n\n    fields = [\n        { key: 'id', label: 'ID', _style: { width: '10%' } },\n        { key: 'username', label: 'Username', _style: { width: '10%'} },\n        { key: 'email', label: 'Email', _style: { width: '10%'} },\n        // { key: 'role_id', label: 'Role', _style: { width: '10%'} },\n        // { key: 'createdBy', label: 'Recorder', _style: { width: '10%'} },\n        { key: 'createdAt', label: 'Record Date',  _style: { width: '20%'} },\n        // { key: 'updatedBy', label: 'Modifier', _style: { width: '10%'} },\n        { key: 'updatedAt', label: 'Modify Date', _style: { width: '20%'} },\n        { key: 'action', _style: { width: '15%'} }\n    ]\n\n    componentDidMount() {\n        // Get User All\n        axios.get(`${ServiceApi}`+`/api/v1/user`)\n          .then((response) => {\n            this.setState({ users: response.data.data });\n            console.log(this.state.users);\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    userDelete = () => {\n        axios.delete(`${ServiceApi}`+`/api/v1/user/${this.state.id}`)\n          .then(() => {\n              this.setState({ show: false });\n              window.location.reload();\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    hideAlert = () => {\n        this.setState({ show: false });\n    }\n\n    render(){\n        return(\n            <CCard>\n                {/* <CCardHeader>\n                    <CButton to=\"/user/create\" className=\"float-right\">+ New</CButton>\n                </CCardHeader> */}\n                <CCardBody>\n                     <CDataTable\n                     items={this.state.users}\n                     fields={this.fields}\n                    //  tableFilter\n                    //  itemsPerPageSelect\n                    //  itemsPerPage={5}\n                    //  hover\n                     sorter\n                    //  pagination\n                     scopedSlots = {{\n                        'action':\n                          (item)=>(\n                            <td>\n                                <CButton to={`/user/edit/${item.id}`} className=\"btn btn-secondary mr-2\" size='sm'>\n                                   Edit\n                                </CButton>\n                                {/* <CButton onClick={ () => this.setState({ show: true, id: item.id })} className=\"btn btn-danger sm\" size='sm'>\n                                   Delete\n                                </CButton> */}\n                            </td>\n                        ),\n                        'createdAt':\n                          (item)=>(\n                            <td>\n                                <Moment format=\"YYYY/MMM/DD\">{ item.createdAt }</Moment>\n                            </td>\n                        ),\n                        'updatedAt':\n                          (item)=>(\n                            <td>\n                                <Moment format=\"YYYY/MMM/DD\">{ item.updatedAt }</Moment>\n                            </td>\n                        )\n                    }}\n                     >\n                     </CDataTable>\n                </CCardBody>\n                <SweetAlert\n                    show={this.state.show}\n                    warning\n                    showCancel\n                    confirmBtnText=\"Yes, delete it!\"\n                    confirmBtnBsStyle=\"danger\"\n                    cancelBtnBsStyle=\"default\"\n                    title=\"Are you sure?\"\n                    onConfirm={this.userDelete}\n\t                onCancel={this.hideAlert}\n                />\n            </CCard>\n        );\n    }\n}\n\nexport default User;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/role/CreateRole.js",["253","254","255"],"import React from 'react';\nimport axios from 'axios';\nimport ServiceApi from \"../../Service\";\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CTextarea,\n    CLabel,\n    CTabs,\n    CNav,\n    CNavItem,\n    CNavLink,\n    CTabContent,\n    CTabPane\n  } from '@coreui/react';\n\n  class CreateRole extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            name: '',\n            description: ''\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        // Insert to role \n        axios.post(`${ServiceApi}`+`/api/v1/role`, {\n            name: this.state.name,\n            description: this.state.description\n        })\n          .then(function () {\n            window.location.href = `${window.origin}/#/role`;\n          })\n          .catch( error => {\n            console.log(error);\n          })\n        //   Insert to rolHasPermission\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                <CTabs activeTab=\"home\">\n                    <CNav variant=\"tabs\">\n                        <CNavItem>\n                        <CNavLink data-tab=\"home\">\n                            Info\n                        </CNavLink>\n                        </CNavItem>\n                        <CNavItem>\n                        <CNavLink data-tab=\"permission\">\n                            Permission\n                        </CNavLink>\n                        </CNavItem>\n                        <CNavItem>\n                        </CNavItem>\n                    </CNav>\n                    <CForm onSubmit={this.submitHandler}>\n                    <CTabContent>\n                            <CTabPane data-tab=\"home\">\n                                    <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                            <CLabel>Name <star className=\"text-danger\">*</star></CLabel>\n                                            <CInput\n                                            className=\"form-control\"\n                                            placeholder=\"Enter Name\"\n                                            name=\"name\"\n                                            onChange={(e) => this.handleChange({ name: e.target.value }) }\n                                            />\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                    <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                            <CLabel>Description</CLabel>\n                                                <CTextarea \n                                                placeholder=\"Enter Description\"\n                                                name=\"description\"\n                                                onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                                 />\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                            </CTabPane>\n                            <CTabPane data-tab=\"permission\">\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                        <CLabel>Permission</CLabel>\n                                    </CFormGroup>\n                                    <CFormGroup>\n                                        <CLabel className=\"mr-5\">\n                                            <input className=\"mr-2\" type=\"checkbox\" />\n                                            Manage All\n                                        </CLabel>\n                                        <CLabel className=\"mr-5\">\n                                            <input className=\"mr-2\" type=\"checkbox\" />\n                                            Create\n                                        </CLabel>\n                                        <CLabel className=\"mr-5\">\n                                            <input className=\"mr-2\" type=\"checkbox\" />\n                                            Edit\n                                        </CLabel>\n                                        <CLabel className=\"mr-5\">\n                                            <input className=\"mr-2\" type=\"checkbox\" />\n                                            Delete\n                                        </CLabel>\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            </CTabPane>\n                        </CTabContent>\n                        <CRow>\n                            <CCol className=\"md-12 xs-12\">\n                                <CFormGroup>\n                                    <CButton to=\"/role\" className=\"float-right\">Cancel</CButton>\n                                    <CButton type=\"submit\" className=\"float-right\">Save Change</CButton>\n                                </CFormGroup>\n                            </CCol>\n                        </CRow>\n                    </CForm>\n                    </CTabs>\n                </CCardBody>\n            </CCard>\n        );\n    }\n  }\n  export default CreateRole;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/post/Post.js",["256","257","258"],"import React from 'react';\nimport axios from 'axios';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Moment from 'react-moment';\nimport ServiceApi from \"../../Service\";\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CDataTable\n  } from '@coreui/react';\n\nclass Post extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            id: '',\n            posts: [],\n            show: false\n        }\n    }\n    fields = [\n        { key: 'id', label: 'ID', _style: { width: '10%' } },\n        { key: 'title', label: 'Product Name', _style: { width: '15%'} },\n        { key: 'thumbnail', label: 'Thumbnail', _style: { width: '5%'} },\n        { key: 'barcode', label: 'Barcode', _style: { width: '10%'} },\n        // { key: 'createdBy', label: 'Recorder', _style: { width: '10%'} },\n        { key: 'createdAt', label: 'Record Date',  _style: { width: '5%'} },\n        // { key: 'updatedBy', label: 'Modifier', _style: { width: '10%'} },\n        { key: 'updatedAt', label: 'Modify Date', _style: { width: '5%'} },\n        { key: 'action', _style: { width: '15%'} }\n    ];\n\n    componentDidMount(){\n        // Get Post All\n        axios.get(`${ServiceApi}/api/v1/post`).then( respone => {\n            this.setState({ posts: respone.data.data });\n            console.log(this.state.posts)\n        }).catch( error =>  console.log(error))\n    }\n\n    postDelete = () => {\n        axios.delete(`${ServiceApi}/api/v1/post/${this.state.id}`)\n          .then(() => {\n              this.setState({ show: false });\n              window.location.reload();\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    hideAlert = () => {\n        this.setState({ show: false });\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardHeader>\n                    <CButton to=\"/post/create\" className=\"float-right\">+ New</CButton>\n                </CCardHeader>\n                <CCardBody>\n                     <CDataTable\n                     items={this.state.posts}\n                     fields={this.fields}\n                     tableFilter={true}\n                     itemsPerPageSelect\n                     itemsPerPage={5}\n                     hover\n                     sorter\n                     pagination\n                     scopedSlots = {{\n                        'action':\n                          (item)=>(\n                            <td>\n                                <CButton to={`/post/edit/${item.id}`} className=\"btn btn-secondary mr-2\" size='sm'>\n                                   Edit\n                                </CButton>\n                                <CButton onClick={ () => this.setState({ show: true, id: item.id })} className=\"btn btn-danger sm\" size='sm'>\n                                   Delete\n                                </CButton>\n                            </td>\n                        ),\n                        'thumbnail':\n                          (item)=>(\n                            <td>\n                                <a href={`${ServiceApi}/uploads/${item.thumbnail}`}><img className=\"img-fluid rounded\" width=\"60%\" height=\"60%\" src={`http://localhost:81/uploads/${item.thumbnail}`} /></a>\n                            </td>\n                        ),\n                        'createdAt':\n                          (item)=>(\n                            <td>\n                                <Moment format=\"YYYY/MMM/DD\">{ item.createdAt }</Moment>\n                            </td>\n                        ),\n                        'updatedAt':\n                          (item)=>(\n                            <td>\n                                <Moment format=\"YYYY/MMM/DD\">{ item.updatedAt }</Moment>\n                            </td>\n                        )\n                    }}\n                     >\n                     </CDataTable>\n                </CCardBody><SweetAlert\n                    show={this.state.show}\n                    warning\n                    showCancel\n                    confirmBtnText=\"Yes, delete it!\"\n                    confirmBtnBsStyle=\"danger\"\n                    cancelBtnBsStyle=\"default\"\n                    title=\"Are you sure?\"\n                    onConfirm={this.postDelete}\n\t                onCancel={this.hideAlert}\n                />\n            </CCard>\n        );\n    }\n}\n\nexport default Post;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/role/Role.js",["259","260","261","262"],"import React from 'react';\nimport axios from 'axios';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Moment from 'react-moment';\nimport ServiceApi from \"../../Service\";\nimport {\n    CButton,\n    CCardBody,\n    CCardHeader,\n    CDataTable,\n    CCard\n  } from '@coreui/react';\n\nclass Role extends React.Component {\n\n    constructor(props){\n        super(props)\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            id: this.props.match.params.id,\n            show: false,\n            roles: []\n        }\n    }\n\n    fields = [\n        { key: 'id', _style: { width: '10%'} },\n        { key: 'name', _style: { width: '10%'} },\n        { key: 'description', _style: { width: '10%'} },\n        { key: 'createdBy', label: 'Recorder', _style: { width: '10%'} },\n        { key: 'createdAt', label: 'Record Date',  _style: { width: '5%'} },\n        { key: 'updatedBy', label: 'Modifier', _style: { width: '10%'} },\n        { key: 'updatedAt', label: 'Modify Date', _style: { width: '5%'} },\n        { key: 'action', _style: { width: '15%'} }\n    ]\n\n    componentDidMount() {\n        // Get Role Option\n        axios.get(`${ServiceApi}`+`/api/v1/role`)\n          .then((response) => {\n            this.setState({ roles: response.data.data });\n            console.log(this.state.users);\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    roleDelete = () => {\n        axios.delete(`${ServiceApi}`+`/api/v1/user/${this.state.id}`)\n          .then(() => {\n              this.setState({ show: false });\n              window.location.reload();\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    hideAlert = () => {\n        this.setState({ show: false });\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardHeader>\n                    <CButton to=\"/role/create\" className=\"float-right\">+ New</CButton>\n                </CCardHeader>\n                <CCardBody>\n                    <CDataTable\n                    items={this.state.roles}\n                    fields={this.fields}\n                    tableFilter\n                    itemsPerPageSelect\n                    itemsPerPage={5}\n                    hover\n                    sorter\n                    pagination\n                    scopedSlots = {{\n                        'action':\n                          (item)=>(\n                            <td>\n                                <CButton to={`/role/edit/${item.id}`} className=\"btn btn-secondary mr-2\" size='sm'>\n                                   Edit\n                                </CButton>\n                                <CButton onClick={ () => this.setState({ show: true, id: item.id })} className=\"btn btn-danger sm\" size='sm'>\n                                   Delete\n                                </CButton>\n                            </td>\n                        ),\n                        'createdAt':\n                          (item)=>(\n                            <td>\n                                <Moment format=\"YYYY/MM/DD\">{ item.createdAt }</Moment>\n                            </td>\n                        ),\n                        'updatedAt':\n                          (item)=>(\n                            <td>\n                                <Moment format=\"YYYY/MM/DD\">{ item.updatedAt }</Moment>\n                            </td>\n                        )\n                    }}\n                    />\n                </CCardBody>\n                <SweetAlert\n                    show={this.state.show}\n                    warning\n                    showCancel\n                    confirmBtnText=\"Yes, delete it!\"\n                    confirmBtnBsStyle=\"danger\"\n                    cancelBtnBsStyle=\"default\"\n                    title=\"Are you sure?\"\n                    onConfirm={this.roleDelete}\n\t                onCancel={this.hideAlert}\n                />\n            </CCard>\n        );\n    }\n}\n\nexport default Role;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/role/UpdateRole.js",["263","264","265","266"],"import React from 'react';\nimport axios from 'axios';\nimport ServiceApi from \"../../Service\";\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CTextarea,\n    CLabel,\n    CTabs,\n    CNav,\n    CNavItem,\n    CNavLink,\n    CTabContent,\n    CTabPane\n  } from '@coreui/react';\n\n  class CreateRole extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            id: this.props.match.params.id,\n            name: '',\n            description: '',\n            role: []\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    componentDidMount(){\n        axios.get(`${ServiceApi}/api/v1/role/${this.state.id}`)\n        .then((respone) => {\n            this.setState({ role: respone.data.data });\n            this.state.role.map( item => {\n                this.setState({\n                    name: item.name,\n                    description: this.state.description\n                });\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        // Insert to role \n        axios.put(`${ServiceApi}`+`/api/v1/role/${this.state.id}`, {\n            name: this.state.name,\n            description: this.state.description\n        })\n          .then(function () {\n            window.location.href = `${window.origin}/#/role`;\n          })\n          .catch( error => {\n            console.log(error);\n          })\n        //   Insert to rolHasPermission\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                <CTabs activeTab=\"home\">\n                    <CNav variant=\"tabs\">\n                        <CNavItem>\n                        <CNavLink data-tab=\"home\">\n                            Info\n                        </CNavLink>\n                        </CNavItem>\n                        <CNavItem>\n                        <CNavLink data-tab=\"permission\">\n                            Permission\n                        </CNavLink>\n                        </CNavItem>\n                        <CNavItem>\n                        </CNavItem>\n                    </CNav>\n                    <CForm onSubmit={this.submitHandler}>\n                    <CTabContent>\n                            <CTabPane data-tab=\"home\">\n                                    <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                            <CLabel>Name <star className=\"text-danger\">*</star></CLabel>\n                                            <CInput\n                                            className=\"form-control\"\n                                            placeholder=\"Enter Name\"\n                                            name=\"name\"\n                                            value={this.state.name}\n                                            onChange={(e) => this.handleChange({ name: e.target.value }) }\n                                            />\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                    <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                            <CLabel>Description</CLabel>\n                                                <CTextarea \n                                                placeholder=\"Enter Description\"\n                                                name=\"description\"\n                                                value={this.state.description}\n                                                onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                                 />\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                            </CTabPane>\n                            <CTabPane data-tab=\"permission\">\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                        <CLabel>Permission</CLabel>\n                                    </CFormGroup>\n                                    <CFormGroup>\n                                        <CLabel className=\"mr-5\">\n                                            <input className=\"mr-2\" type=\"checkbox\" />\n                                            Manage All\n                                        </CLabel>\n                                        <CLabel className=\"mr-5\">\n                                            <input className=\"mr-2\" type=\"checkbox\" />\n                                            Create\n                                        </CLabel>\n                                        <CLabel className=\"mr-5\">\n                                            <input className=\"mr-2\" type=\"checkbox\" />\n                                            Edit\n                                        </CLabel>\n                                        <CLabel className=\"mr-5\">\n                                            <input className=\"mr-2\" type=\"checkbox\" />\n                                            Delete\n                                        </CLabel>\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            </CTabPane>\n                        </CTabContent>\n                        <CRow>\n                            <CCol className=\"md-12 xs-12\">\n                                <CFormGroup>\n                                    <CButton to=\"/role\" className=\"float-right\">Cancel</CButton>\n                                    <CButton type=\"submit\" className=\"float-right\">Save Change</CButton>\n                                </CFormGroup>\n                            </CCol>\n                        </CRow>\n                    </CForm>\n                    </CTabs>\n                </CCardBody>\n            </CCard>\n        );\n    }\n  }\n  export default CreateRole;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/category/CreateCategory.js",["267","268","269","270"],"import React from 'react';\nimport axios from 'axios';\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CTextarea,\n    CLabel\n  } from '@coreui/react';\n\n  const baseUrl = 'http://localhost:81';\n\nclass CreateCategory extends React.Component { \n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =\"http://localhost:3000/#/login\";\n        this.state = {\n            name: '',\n            description: '',\n            categoryOption: []\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        axios.post(`${baseUrl}`+`/api/v1/category`, {\n            name: this.state.name,\n            description: this.state.description\n        })\n          .then(function () {\n            window.location.href = \"http://localhost:3000/#/category\";\n          })\n          .catch( error => {\n            console.log(error);\n          })\n    }\n\n    componentDidMount(){\n        // Get Category Option\n        axios.get(`${baseUrl}`+`/api/v1/category`)\n          .then((response) => {\n            this.setState({ categoryOption: response.data.data });\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                    <CForm>\n                        <CRow>\n                            <CCol className=\"md-12 xs-12\">\n                                <CFormGroup>\n                                    <CLabel>Name <span className=\"text-danger\">*</span></CLabel>\n                                    <CInput\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Name\"\n                                    required\n                                    name=\"name\"\n                                    onChange={(e) => this.handleChange({ name: e.target.value }) }\n                                    />\n                                </CFormGroup>\n                                <CFormGroup>\n                                    <CLabel>Description</CLabel>\n                                    <CTextarea\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Description\"\n                                    name=\"description\"\n                                    onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                    />\n                                </CFormGroup>\n                            </CCol>\n                        </CRow>\n                        <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                <CButton to=\"/category\" className=\"float-right\">Cancel</CButton>\n                                <CButton type=\"submit\" onClick= { this.submitHandler } className=\"float-right\">Save Change</CButton>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                    </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\nexport default CreateCategory;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/post/CreatePost.js",["271","272","273","274","275","276"],"import React from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport axios from 'axios';\nimport ServiceApi from \"../../Service\";\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CLabel,\n    CButton,\n    CSelect,\n    CCardFooter,\n    CTextarea\n  } from '@coreui/react';\n\n  const config = {\n    headers: {\n        'content-type': 'multipart/form-data',\n        'Accept': '*'\n    }\n};\n\nclass CreatePost extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            id: props.id,\n            handleWYSIWYGInput: props.handleWYSIWYGInput,\n            editor: ClassicEditor,\n            title: '',\n            barcode: '',\n            file: [],\n            description: '',\n            body: '',\n            url: 'avatars/no_image.png',\n            category_id: '',\n            category: '',\n            categoryOption: [],\n            tagOption: [],\n            hidden: true\n        } \n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    handleUploadChange(event) {\n        this.setState({\n          file: event.target.files[0],\n          url: URL.createObjectURL(event.target.files[0]),\n        })\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        if(this.state.category_id == ''){\n            this.setState({hidden: false });\n            return\n        }\n\n        let postOject = [];\n        let fd = new FormData();\n            fd.append('file', this.state.file);\n\n        if(!(this.state.file == '')){\n            // Upload image thumnail\n            axios.post(`${ServiceApi}/api/v1/upload`, fd, config).then( respone => {\n                this.setState({ file: respone.data.filename})\n\n                postOject = {\n                    title: this.state.title,\n                    barcode: this.state.barcode,\n                    thumbnail: this.state.file,\n                    description: this.state.description,\n                    body: this.state.body,\n                    category_id: this.state.category_id,\n                }\n\n                // Create Post\n                axios.post(`${ServiceApi}/api/v1/post`, postOject ).then(() => {\n                    window.location.href=`${window.origin}/#/post`;\n                }).catch( error => console.log(error))\n            })\n        }else{\n            postOject = {\n                title: this.state.title,\n                barcode: this.state.barcode,\n                description: this.state.description,\n                body: this.state.body,\n                category_id: this.state.category_id,\n            }\n\n            // Create Post\n            axios.post(`${ServiceApi}/api/v1/post`, postOject ).then(() => {\n                window.location.href=`${window.origin}/#/post`;\n            }).catch( error => console.log(error))\n        }\n    }\n\n    componentDidMount(){\n        // Get Category All\n        axios.get(`${ServiceApi}/api/v1/category`)\n        .then((respone) => {\n            this.setState({\n                categoryOption: respone.data.data\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                <CForm onSubmit={this.submitHandler}>\n                    <CRow>\n                        <CCol className=\"col-md-8 xs-8\">\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Post Name <span className=\"text-danger\">*</span></CLabel>\n                                    <CInput\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Post Name\"\n                                    name=\"title\"\n                                    onChange={(e) => this.handleChange({ title: e.target.value }) }\n                                    />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Post Code </CLabel>\n                                    <CInput\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Post Code\"\n                                    name=\"barcode\"\n                                    onChange={(e) => this.handleChange({ barcode: e.target.value }) }\n                                    />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Description </CLabel>\n                                    <CTextarea\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Description\"\n                                    name=\"description\"\n                                    rows=\"6\"\n                                    cols=\"4\"\n                                    onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                    />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Content</CLabel>\n                                    <CKEditor\n                                    editor={ ClassicEditor }\n                                    data={this.state.body}\n                                    config={{ckfinder: {\n                                        // Upload the images to the server using the CKFinder QuickUpload command\n                                        // You have to change this address to your server that has the ckfinder php connector\n                                        uploadUrl: `${ServiceApi}/api/v1/uploader`\n                                    }}}\n                                    \n                                    onChange={ ( event, editor ) => {\n                                        const data = editor.getData();\n                                        this.setState({ body: data});\n                                        // console.log( { event, editor, data } );\n                                    } }\n                                />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                        </CCol>\n                        <CCol className=\"col-md-4 col-xs-4\">\n                            <CCard>\n                                <CCardBody>\n                                <CCard>\n                                     <CCardBody>\n                                     <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                                <img src={`${this.state.url}`} alt=\"logo\" className=\"img-fluid\"></img>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                     </CCardBody>\n                                     <CCardFooter>\n                                     <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                                <div className=\"input-group mb-3\">\n                                                    <div className=\"input-group-prepend\">\n                                                        <span className=\"input-group-text\">Upload</span>\n                                                    </div>\n                                                    <div className=\"custom-file\">\n                                                    <input type=\"file\" \n                                                    className=\"custom-file-input\" id=\"inputGroupFile01\"\n                                                    name=\"image\"\n                                                    type=\"file\"\n                                                    className=\"custom-file-input\"\n                                                    onChange={(e) => this.handleUploadChange(e)}\n                                                    />\n                                                    <label className=\"custom-file-label\" for=\"inputGroupFile01\">Choose Image</label>\n                                                    </div>\n                                                </div>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                     </CCardFooter>\n                                 </CCard>\n                                    <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                            <CLabel>Menu Post <span className=\"text-danger\">*</span></CLabel>\n                                            <CSelect \n                                            name=\"category_id\"\n                                            onChange={(e) => this.handleChange({ category_id: e.target.value }) }\n                                            >\n                                                <option value=\"0\">Please select option</option>\n                                                {\n                                                    this.state.categoryOption.map(option => {\n                                                     return  <option key={option.id} value={option.id}>{option.name}</option>\n                                                    })\n                                                }\n                                            </CSelect>\n                                            <small hidden={this.state.hidden} style={{color: \"red\"}}>Please select one</small>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                </CCardBody>\n                            </CCard>\n                        </CCol>\n                    </CRow>\n                    <CRow>\n                        <CCol className=\"md-12 xs-12\">\n                            <CFormGroup>\n                                <CButton type=\"submit\" className=\"float-right\">Public</CButton>\n                                <CButton to=\"/post\" className=\"float-right\">Cancel</CButton>\n                            </CFormGroup>\n                        </CCol>\n                    </CRow>\n                </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\nexport default CreatePost;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/post/UpdatePost.js",["277","278","279","280","281","282","283","284"],"import React from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport axios from 'axios';\nimport ServiceApi from \"../../Service\";\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CLabel,\n    CButton,\n    CSelect,\n    CCardFooter,\n    CTextarea\n  } from '@coreui/react';\n  const config = {\n    headers: {\n        'content-type': 'multipart/form-data',\n        'Accept': '*'\n    }\n};\n\nclass UpdatePost extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            id: this.props.match.params.id,\n            content: props.content,\n            handleWYSIWYGInput: props.handleWYSIWYGInput,\n            editor: ClassicEditor,\n            title: '',\n            barcode: '',\n            file: [],\n            description: '',\n            body: '',\n            fileName: '',\n            url: 'avatars/no_image.png',\n            category: '',\n            categoryOption: [],\n            tagOption: []\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    handleUploadChange(event) {\n        this.setState({\n          file: event.target.files[0],\n          url: URL.createObjectURL(event.target.files[0])\n        })\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        let postOject = [];\n        if(!(this.state.file == '')){\n            ///Delete old file\n            axios.delete(`${ServiceApi}/api/v1/delete/file/${this.state.fileName}`);\n\n            // Upload file\n            let fd = new FormData();\n            fd.append('file', this.state.file);\n\n            axios.post(`${ServiceApi}/api/v1/upload`, fd, config)\n            .then( respone => {\n                this.setState({ file: respone.data.filename})\n                postOject = {\n                    title: this.state.title,\n                    barcode: this.state.barcode,\n                    thumbnail: this.state.file,\n                    description: this.state.description,\n                    body: this.state.body,\n                    category_id: this.state.category_id,\n                }\n                \n                // Update post\n                axios.put(`${ServiceApi}`+`/api/v1/post/${this.state.id}`, postOject)\n                .then(function () {\n                    window.location.href = `${window.origin}/#/post`;\n                })\n                .catch( error => {\n                    console.log(error);\n                })\n            })\n            .catch( error => console.log(error))\n        }else{\n            postOject = {\n                title: this.state.title,\n                barcode: this.state.barcode,\n                description: this.state.description,\n                body: this.state.body,\n                category_id: this.state.category_id\n            }\n\n            // Update post\n            axios.put(`${ServiceApi}`+`/api/v1/post/${this.state.id}`, postOject)\n            .then(function () {\n                window.location.href = `${window.origin}/#/post`;\n            })\n            .catch( error => {\n                console.log(error);\n            })\n        }\n    }\n\n    componentDidMount(){\n        // Get Post edit\n        axios.get(`${ServiceApi}/api/v1/post/${this.state.id}`)\n        .then((respone) => {\n            this.setState({\n                posts: respone.data.data\n            });\n            this.state.posts.map(item => {\n                this.setState({ \n                    category: item.category_id,\n                    description: item.description,\n                    body: item.body,\n                    title: item.title,\n                    url: `${ServiceApi}/uploads/${item.thumbnail}`,\n                    barcode: item.barcode,\n                    fileName: item.thumbnail\n                 });\n            })\n        })\n        .catch( error => {\n            console.log(error);\n        })\n        // Get Category All \n        axios.get(`${ServiceApi}/api/v1/category`)\n        .then((respone) => {\n            this.setState({\n                categoryOption: respone.data.data\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n        // Get Tag\n        axios.get(`${ServiceApi}/api/v1/tag`)\n        .then((respone) => {\n            this.setState({\n                tagOption: respone.data.data\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                <CForm onSubmit={this.submitHandler}>\n                    <CRow>\n                        <CCol className=\"col-md-8 xs-8\">\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Post Name <span className=\"text-danger\">*</span></CLabel>\n                                    <CInput\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Post Name\"\n                                    name=\"title\"\n                                    value={this.state.title}\n                                    onChange={(e) => this.handleChange({ title: e.target.value }) }\n                                    />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Post Code </CLabel>\n                                    <CInput\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Post Code\"\n                                    name=\"barcode\"\n                                    value={this.state.barcode}\n                                    onChange={(e) => this.handleChange({ barcode: e.target.value }) }\n                                    />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Description</CLabel>\n                                    <CTextarea\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Description\"\n                                    name=\"description\"\n                                    rows=\"6\"\n                                    cols=\"4\"\n                                    value={ this.state.description }\n                                    onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                    />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                    <CLabel>Content</CLabel>\n                                    <CKEditor\n                                    editor={ ClassicEditor }\n                                    data={this.state.body}\n                                    config={{ckfinder: {\n                                        // Upload the images to the server using the CKFinder QuickUpload command\n                                        // You have to change this address to your server that has the ckfinder php connector\n                                        uploadUrl: `${ServiceApi}/api/v1/uploader`\n                                    }}}\n\n                                    onChange={ ( event, editor ) => {\n                                        const data = editor.getData();\n                                        this.setState({ body: data});\n                                        console.log(this.state.body)\n                                    } }\n                                />\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                        </CCol>\n                        <CCol className=\"col-md-4 col-xs-4\">\n                            <CCard>\n                                <CCardBody>\n                                <CCard>\n                                     <CCardBody>\n                                     <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                                <img src={`${this.state.url}`} alt=\"logo\" className=\"img-fluid\"></img>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                     </CCardBody>\n                                     <CCardFooter>\n                                     <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                                <div className=\"input-group mb-3\">\n                                                    <div className=\"input-group-prepend\">\n                                                        <span className=\"input-group-text\">Upload</span>\n                                                    </div>\n                                                    <div className=\"custom-file\">\n                                                    <input type=\"file\" \n                                                    className=\"custom-file-input\" id=\"inputGroupFile01\"\n                                                    className=\"custom-file-input\"\n                                                    onChange={(e) => this.handleUploadChange(e)}\n                                                    />\n                                                    <label className=\"custom-file-label\" for=\"inputGroupFile01\">Choose Image</label>\n                                                    </div>\n                                                </div>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                     </CCardFooter>\n                                 </CCard>\n                                    <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                            <CLabel>Menu Post <span className=\"text-danger\">*</span></CLabel>\n                                            <CSelect \n                                            name=\"category_id\"\n                                            onChange={(e) => this.handleChange({ category_id: e.target.value }) }\n                                            >\n                                                {\n                                                    this.state.categoryOption.map(option => {\n                                                     return  <option selected={this.state.category == option.id} key={option.id} value={option.id}>{option.name}</option>\n                                                    })\n                                                }\n                                            </CSelect>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                </CCardBody>\n                            </CCard>\n                        </CCol>\n                    </CRow>\n                    <CRow>\n                        <CCol className=\"md-12 xs-12\">\n                            <CFormGroup>\n                                <CButton type=\"submit\" className=\"float-right\">Public</CButton>\n                                <CButton to=\"/post\" className=\"float-right\">Cancel</CButton>\n                            </CFormGroup>\n                        </CCol>\n                    </CRow>\n                </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\nexport default UpdatePost;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/category/UpdateCategory.js",["285","286","287","288","289","290"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom'\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CTextarea,\n    CLabel\n  } from '@coreui/react';\n\n  const baseUrl = 'http://localhost:81';\n\nclass UpdateCategory extends React.Component { \n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =\"http://localhost:3000/#/login\";\n        this.state = {\n            id: this.props.match.params.id,\n            name: '',\n            description: '',\n            category: []\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        axios.put(`${baseUrl}`+`/api/v1/category/${this.state.id}`, {\n            name: this.state.name,\n            description: this.state.description\n        })\n          .then(function () {\n             window.location.href = \"http://localhost:3000/#/category\";\n          })\n          .catch( error => {\n            console.log(error);\n          })\n    }\n\n    componentDidMount(){\n        // Get Category Option\n        axios.get(`${baseUrl}`+`/api/v1/category/${this.state.id}`)\n          .then((response) => {\n              this.setState({ category: response.data.data });\n              this.state.category.map(item => {\n                  this.setState({\n                      name: item.name,\n                      description: item.description\n                  })\n              });\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                    <CForm onSubmit={ this.submitHandler }>\n                        <CRow>\n                            <CCol className=\"md-12 xs-12z\">\n                                <CFormGroup>\n                                    <CLabel>Name <span className=\"text-danger\">*</span></CLabel>\n                                    <CInput\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Name\"\n                                    name=\"name\"\n                                    value={this.state.name}\n                                    onChange={(e) => this.handleChange({ name: e.target.value }) }\n                                    />\n                                </CFormGroup>\n                                <CFormGroup>\n                                    <CLabel>Description</CLabel>\n                                    <CTextarea\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Description\"\n                                    name=\"description\"\n                                    value={this.state.description}\n                                    onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                    />\n                                </CFormGroup>\n                            </CCol>\n                        </CRow>\n                        <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                <CButton to=\"/category\" className=\"float-right\">Cancel</CButton>\n                                <CButton type=\"submit\" className=\"float-right\">Save Change</CButton>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                    </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\nexport default UpdateCategory;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/tag/CreateTag.js",["291","292","293","294","295"],"import React from 'react';\nimport axios from 'axios';\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CTextarea,\n    CLabel,\n  } from '@coreui/react';\n \n  const baseUrl = 'http://localhost:81';\n\n  class CreateTag extends React.Component {\n    \n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =\"http://localhost:3000/#/login\";\n        this.state = {\n            messageError: '',\n            name: '',\n            description: ''\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        if(this.state.name == '' || this.state.name == undefined ){\n         this.setState({ messageError: 'Name is required'});\n        }else{\n            axios.post(`${baseUrl}`+`/api/v1/tag`, {\n                name: this.state.name,\n                description: this.state.description\n            })\n            .then(function () {\n            window.location.href = \"http://localhost:3000/#/tag\";\n            })\n            .catch( error => {\n                console.log(error);\n            })\n        }\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                     <CForm>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                            <CLabel>Name <span className=\"text-danger\">*</span></CLabel>\n                             <CInput\n                             className=\"form-control\"\n                             placeholder=\"Enter Name\"\n                             name=\"name\"\n                             onChange={(e) => this.handleChange({ name: e.target.value }) }\n                             />\n                             <small className=\"text-danger\">{this.state.messageError}</small>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                             <CLabel>Description</CLabel>\n                                 <CTextarea placeholder=\"Enter Description\"\n                                  name=\"description\"\n                                  onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                  />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                <CButton to=\"/tag\" className=\"float-right\">Cancel</CButton>\n                                <CButton type=\"submit\" onClick= { this.submitHandler } className=\"float-right\">Save Change</CButton>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n  }\n  export default CreateTag;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/tag/UpdateTag.js",["296","297","298","299","300","301"],"import React from 'react';\nimport axios from 'axios';\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CTextarea,\n    CLabel,\n  } from '@coreui/react';\n\n  const baseUrl = 'http://localhost:81';\n\n  class UpdateTag extends React.Component {\n    \n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =\"http://localhost:3000/#/login\";\n        this.state = {\n            messageError: '',\n            id: this.props.match.params.id,\n            name: '',\n            description: '',\n            tags: []\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        if(this.state.name == '' || this.state.name == undefined ){\n            this.setState({ messageError: 'Name is required'});\n        }else{\n            axios.put(`${baseUrl}`+`/api/v1/tag/${this.state.id}`, {\n                name: this.state.name,\n                description: this.state.description\n            })\n            .then(function () {\n            window.location.href = \"http://localhost:3000/#/tag\";\n            })\n            .catch( error => {\n                console.log(error);\n            })\n        }\n    }\n\n    componentDidMount(){\n        axios.get(`${baseUrl}/api/v1/tag/${this.state.id}`)\n        .then((respone) => {\n            this.setState({ tags: respone.data.data });\n            console.log(respone);\n            this.state.tags.map( item => {\n                this.setState({\n                    name: item.name,\n                    description: item.description\n                });\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                     <CForm>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                            <CLabel>Name <span className=\"text-danger\">*</span></CLabel>\n                             <CInput\n                             className=\"form-control\"\n                             placeholder=\"Enter Name\"\n                             name=\"name\"\n                             value={this.state.name}\n                             onChange={(e) => this.handleChange({ name: e.target.value }) }\n                             />\n                             <small className=\"text-danger\">{this.state.messageError}</small>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                             <CLabel>Description</CLabel>\n                                 <CTextarea placeholder=\"Enter Description\"\n                                  name=\"description\"\n                                  value={this.state.description}\n                                  onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                  />\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     <CRow>\n                         <CCol className=\"md-12 xs-12\">\n                             <CFormGroup>\n                                <CButton to=\"/tag\" className=\"float-right\">Cancel</CButton>\n                                <CButton type=\"submit\" onClick= { this.submitHandler } className=\"float-right\">Save Change</CButton>\n                             </CFormGroup>\n                         </CCol>\n                     </CRow>\n                     </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n  }\n  export default UpdateTag;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/category/Category.js",["302","303","304"],"import React from 'react';\nimport axios from 'axios';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CDataTable\n  } from '@coreui/react';\n\n  const baseUrl = 'http://localhost:81';\n\nclass Category extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =\"http://localhost:3000/#/login\";\n        this.state = {\n            categories: []\n        }\n    }\n\n    fields = [\n        { key: 'id', label: 'ID', _style: { width: '10%' } },\n        { key: 'name', label: 'Name', _style: { width: '10%'} },\n        { key: 'description', label: 'Description', _style: { width: '10%'} },\n        { key: 'createdBy', label: 'Recorder', _style: { width: '10%'} },\n        { key: 'createdAt', label: 'Record Date',  _style: { width: '5%'} },\n        { key: 'updatedBy', label: 'Modifier', _style: { width: '10%'} },\n        { key: 'updatedAt', label: 'Modify Date', _style: { width: '5%'} },\n        { key: 'action', _style: { width: '15%'} }\n    ]\n\n    componentDidMount(){\n        axios.get(`${baseUrl}`+`/api/v1/category`)\n          .then((response) => {\n            this.setState({ categories: response.data.data });\n            console.log(this.state.categories);\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardHeader>\n                    <CButton to=\"/category/create\" className=\"float-right\">+ New</CButton>\n                </CCardHeader>\n                <CCardBody>\n                     <CDataTable\n                     items={this.state.categories}\n                     fields={this.fields}\n                     tableFilter\n                     itemsPerPageSelect\n                     itemsPerPage={5}\n                     hover\n                     sorter\n                     pagination\n                     scopedSlots = {{\n                        'action':\n                          (item)=>(\n                            <td>\n                                <CButton to={`/category/edit/${item.id}`} className=\"btn btn-secondary mr-2\" size='sm'>\n                                   Edit\n                                </CButton>\n                                <CButton className=\"btn btn-danger sm\" size='sm'>\n                                   Delete\n                                </CButton>\n                            </td>\n                        )}}\n                     >\n                     </CDataTable>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\n\nexport default Category;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/tag/Tag.js",["305","306","307","308"],"import React from 'react';\nimport axios from 'axios';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CDataTable\n  } from '@coreui/react';\n\n  const baseUrl = 'http://localhost:81';\n\n  class Tag extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =\"http://localhost:3000/#/login\";\n        this.state = {\n            id: this.props.match.params.id,\n            show: false,\n            name: '',\n            description: '',\n            tags: []\n        }\n    }\n\n    fields = [\n        { key: 'id', _style: { width: '10%'} },\n        { key: 'name', _style: { width: '10%'} },\n        { key: 'description', _style: { width: '10%'} },\n        { key: 'createdBy', label: 'Recorder', _style: { width: '10%'} },\n        { key: 'createdAt', label: 'Record Date',  _style: { width: '5%'} },\n        { key: 'updatedBy', label: 'Modifier', _style: { width: '10%'} },\n        { key: 'updatedAt', label: 'Modify Date', _style: { width: '5%'} },\n        { key: 'action', _style: { width: '15%'} }\n    ]\n\n    componentDidMount(){\n        // Get Tags All\n        axios.get(`${baseUrl}`+`/api/v1/tag`)\n          .then((response) => {\n            this.setState({ tags: response.data.data });\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    tagDelete = () => {\n        axios.delete(`${baseUrl}`+`/api/v1/tag/${this.state.id}`)\n          .then(() => {\n              this.setState({ show: false });\n              window.location.reload();\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    hideAlert = () => {\n        this.setState({ show: false });\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardHeader>\n                    <CButton to=\"/tag/create\" className=\"float-right\">+ New</CButton>\n                </CCardHeader>\n                <CCardBody>\n                    <CDataTable\n                    items={this.state.tags}\n                    fields={this.fields}\n                    tableFilter\n                    itemsPerPageSelect\n                    itemsPerPage={5}\n                    hover\n                    sorter\n                    pagination\n                    scopedSlots = {{\n                        'action':\n                            (item)=>(\n                            <td>\n                                <CButton to={`/tag/edit/${item.id}`} className=\"btn btn-secondary mr-2\" size='sm'>\n                                    Edit\n                                </CButton>\n                                <CButton onClick={ () => this.setState({ show: true, id: item.id })} className=\"btn btn-danger sm\" size='sm'>\n                                    Delete\n                                </CButton>\n                            </td>\n                        )}}\n                    />\n                </CCardBody>\n                <SweetAlert\n                    show={this.state.show}\n                    warning\n                    showCancel\n                    confirmBtnText=\"Yes, delete it!\"\n                    confirmBtnBsStyle=\"danger\"\n                    cancelBtnBsStyle=\"default\"\n                    title=\"Are you sure?\"\n                    onConfirm={this.tagDelete}\n\t                onCancel={this.hideAlert}\n                />\n            </CCard>\n        );\n    }\n}\n  export default Tag;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/menu/UpdateMenu.js",["309","310","311","312","313","314"],"import React from 'react';\nimport axios from 'axios';\nimport $ from \"jquery\";\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CTextarea,\n    CLabel,\n    CTabs,\n    CNav,\n    CNavItem,\n    CNavLink,\n    CTabContent,\n    CTabPane\n  } from '@coreui/react';\n\n  const baseUrl = 'http://localhost:81';\n\n  class UpdateMenu extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =\"http://localhost:3000/#/login\";\n        this.state = {\n            id: this.props.match.params.id,\n            name: '',\n            description: '',\n            categories: [],\n            categoryCheck: [],\n            isChecked: true\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    handleCheckBoxChange = (e) => {\n        const checkObj = this.state.categoryCheck;\n        let index;\n        if(e.target.checked){\n            checkObj.push(e.target.value);\n            console.log(checkObj);\n        }else{\n            index = checkObj.indexOf(e.target.value)\n            checkObj.splice(index, 1)\n            console.log(checkObj);\n        }\n        this.setState({categoryCheck: checkObj});\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        // console.log(this.state.categoryCheck)\n        // return\n        // Replace MenuHasCategory\n        axios.delete(`${baseUrl}/api/v1/menuHasCategory/${this.state.id}`).catch( error => console.log(error));\n\n        // Get All checked insert to MenuHasCategory\n        this.state.categoryCheck.map( item => {\n            axios.post(`${baseUrl}/api/v1/menuHasCategory`, {\n                menu_id: this.state.id,\n                category_id: item\n            }).catch( error => console.log(error))\n        })\n        // Update Menu\n        axios.put(`${baseUrl}`+`/api/v1/menu/${this.state.id}`, {\n            name: this.state.name,\n            description: this.state.description\n        })\n          .then(function () {\n            window.location.href = \"http://localhost:3000/#/menu\";\n          })\n          .catch( error => {\n              console.log(error);\n          })\n    }\n\n    componentDidMount(){\n        // Get MenuHasCategory All\n        axios.get(`${baseUrl}/api/v1/menuHasCategory`).then( respone => {\n            this.setState({ categoryCheck: respone.data.data });\n        }).catch( error => console.log(error))\n\n        // Get Menu edit\n        axios.get(`${baseUrl}/api/v1/menu/${this.state.id}`)\n        .then((respone) => {\n            this.setState({\n                menus: respone.data.data\n            });\n            this.state.menus.map( item => {\n                this.setState({\n                    name: item.name,\n                    description: item.description\n                });\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n\n        // Get Category All for fetch\n        axios.get(`${baseUrl}/api/v1/category`)\n        .then((respone) => {\n            this.setState({\n                categories: respone.data.data\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                <CTabs activeTab=\"home\">\n                    <CNav variant=\"tabs\">\n                        <CNavItem>\n                        <CNavLink data-tab=\"home\">\n                            Info\n                        </CNavLink>\n                        </CNavItem>\n                        <CNavItem>\n                        <CNavLink data-tab=\"category\">\n                            categories\n                        </CNavLink>\n                        </CNavItem>\n                        <CNavItem>\n                        </CNavItem>\n                    </CNav>\n                    <CForm onSubmit={ this.submitHandler }>\n                    <CTabContent>\n                            <CTabPane data-tab=\"home\">\n                                    <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                            <CLabel>Name <span className=\"text-danger\">*</span></CLabel>\n                                            <CInput\n                                            className=\"form-control\"\n                                            placeholder=\"Enter Name\"\n                                            value={this.state.name}\n                                            onChange={(e) => this.handleChange({ name: e.target.value }) }\n                                            />\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                    <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                            <CLabel>Description</CLabel>\n                                                <CTextarea \n                                                placeholder=\"Enter Description\"\n                                                name=\"description\"\n                                                value={this.state.description}\n                                                onChange={(e) => this.handleChange({ description: e.target.value }) }\n                                                />\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                            </CTabPane>\n                            <CTabPane data-tab=\"category\">\n                            <CRow>\n                                <CCol className=\"md-12 xs-12\">\n                                    <CFormGroup>\n                                        <CLabel>Categories</CLabel>\n                                    </CFormGroup>\n                                    <CFormGroup>\n                                       { this.state.categories.map( (item) => {\n                                            return <CLabel key={item.id} className=\"mr-5\">\n                                                <input name=\"categoryCheck\" className=\"mr-2\" value={item.id} type=\"checkbox\"\n                                                onChange={ (e) => this.handleCheckBoxChange(e) }\n                                                />\n                                                { item.name }\n                                            </CLabel>\n                                        })\n                                       }\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            </CTabPane>\n                        </CTabContent>\n                        <CRow>\n                            <CCol className=\"md-12 xs-12\">\n                                <CFormGroup>\n                                    <CButton to=\"/menu\" className=\"float-right\">Cancel</CButton>\n                                    <CButton type=\"submit\" className=\"float-right\">Save Change</CButton>\n                                </CFormGroup>\n                            </CCol>\n                        </CRow>\n                    </CForm>\n                    </CTabs>\n                </CCardBody>\n            </CCard>\n        );\n    }\n  }\n  export default UpdateMenu;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/company/Company.js",["315","316","317","318"],"import React from 'react';\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport ServiceApi from \"../../Service\";\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CDataTable\n  } from '@coreui/react';\n\nclass Company extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            companies: []\n        }\n    }\n\n    fields = [\n        { key: 'id', label: 'ID', _style: { width: '10%' } },\n        { key: 'name', label: 'Name', _style: { width: '20%'} },\n        { key: 'logo', label: 'Logo', _style: { width: '20%'} },\n        { key: 'phone', label: 'Phone', _style: { width: '10%'} },\n        { key: 'email', label: 'Email', _style: { width: '10%'} },\n        // { key: 'createdBy', label: 'Recorder', _style: { width: '10%'} },\n        { key: 'createdAt', label: 'Record Date',  _style: { width: '5%'} },\n        // { key: 'updatedBy', label: 'Modifier', _style: { width: '10%'} },\n        { key: 'updatedAt', label: 'Modify Date', _style: { width: '5%'} },\n        { key: 'action', _style: { width: '15%'} }\n    ]\n\n    componentDidMount(){\n        axios.get(`${ServiceApi}`+`/api/v1/company/1`)\n          .then((response) => {\n            this.setState({ companies: response.data.data });\n            console.log(this.state.companies);\n          })\n          .catch(function (error) {\n            console.log(error);\n        }) \n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                     <CDataTable\n                     items={this.state.companies}\n                     fields={this.fields}\n                    //  tableFilter\n                    //  itemsPerPageSelect\n                    //  itemsPerPage={5}\n                    //  hover\n                     sorter\n                    //  pagination\n                     scopedSlots = {{\n                        'action':\n                          (item)=>(\n                            <td>\n                                <CButton to={`/company/edit/${item.id}`} className=\"btn btn-secondary mr-2\" size='sm'>\n                                   Edit\n                                </CButton>\n                            </td>\n                        ),\n                        'logo':\n                          (item)=>(\n                            <td>\n                                <a href={`${ServiceApi}/uploads/${item.logo}`}><img className=\"img-fluid rounded\" width=\"100%\" height=\"100%\" src={`${ServiceApi}/uploads/${item.logo}`} /></a>\n                            </td>\n                        ),\n                        'createdAt':\n                          (item)=>(\n                            <td>\n                                <Moment format=\"YYYY/MMM/DD\">{ item.createdAt }</Moment>\n                            </td>\n                        ),\n                        'updatedAt':\n                          (item)=>(\n                            <td>\n                                <Moment format=\"YYYY/MMM/DD\">{ item.updatedAt }</Moment>\n                            </td>\n                        )\n                    }}\n                     >\n                     </CDataTable>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\n\nexport default Company;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/menu/Menu.js",["319","320","321","322"],"import React from 'react';\nimport axios from 'axios';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CDataTable\n  } from '@coreui/react';\n\n  const baseUrl = 'http://localhost:81';\n\nclass Category extends React.Component {\n\n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =\"http://localhost:3000/#/login\";\n        this.state = {\n            menus: []\n        }\n    }\n\n    fields = [\n        { key: 'id', label: 'ID', _style: { width: '10%' } },\n        { key: 'name', label: 'Name', _style: { width: '10%'} },\n        { key: 'description', label: 'Description', _style: { width: '10%'} },\n        { key: 'createdBy', label: 'Recorder', _style: { width: '10%'} },\n        { key: 'createdAt', label: 'Record Date',  _style: { width: '5%'} },\n        { key: 'updatedBy', label: 'Modifier', _style: { width: '10%'} },\n        { key: 'updatedAt', label: 'Modify Date', _style: { width: '5%'} },\n        { key: 'action', _style: { width: '10%'} }\n    ]\n\n    componentDidMount(){\n        axios.get(`${baseUrl}`+`/api/v1/menu/1`)\n          .then((response) => {\n            this.setState({ menus: response.data.data });\n            console.log(this.state.menus);\n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                     <CDataTable\n                     items={this.state.menus}\n                     fields={this.fields}\n                     tableFilter\n                     itemsPerPageSelect\n                     itemsPerPage={5}\n                     hover\n                     sorter\n                     pagination\n                     scopedSlots = {{\n                        'action':\n                          (item)=>(\n                            <td>\n                                <CButton to={`/menu/edit/${item.id}`} className=\"btn btn-secondary mr-2\" size='sm'>\n                                   Edit\n                                </CButton>\n                            </td>\n                        )}}\n                     >\n                     </CDataTable>\n                </CCardBody>\n            </CCard>\n        );\n    }\n}\n\nexport default Category;","/Users/bclong/Desktop/DC-web-clone/web/dc-dashboard/src/screens/company/UpdateCompany.js",["323","324","325","326","327","328","329"],"import React from 'react';\nimport axios from 'axios';\nimport ServiceApi from \"../../Service\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {\n    CCard,\n    CCardBody,\n    CRow,\n    CCol,\n    CInput,\n    CFormGroup,\n    CForm,\n    CButton,\n    CLabel,\n    CCardFooter\n  } from '@coreui/react';\n\n  const config = {\n    headers: {\n        'content-type': 'multipart/form-data',\n        'Accept': '*'\n    }\n};\n\n  class UpdateCompany extends React.Component {\n    \n    constructor(props){\n        super(props);\n        const userId = localStorage.getItem('uuid');\n        if(userId == '' || userId == undefined) window.location.href =`${window.origin}/#/login`;\n        this.state = {\n            id: this.props.match.params.id,\n            handleWYSIWYGInput: props.handleWYSIWYGInput,\n            editor: ClassicEditor,\n            name: '',\n            description: '',\n            address: '',\n            file: [],\n            url: 'avatars/no_image.png',\n            fileName: '',\n            image: [],\n            email: '',\n            phone: '',\n            company: []\n        }\n    }\n\n    handleChange  = (changeObject) => {\n        this.setState(changeObject);\n    }\n\n    handleUploadChange(event) {\n        this.setState({\n          file: event.target.files[0],\n          url: URL.createObjectURL(event.target.files[0]),\n        })\n      }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        let companyObject = [];\n        if(!(this.state.file == '')){\n            ///Delete old file\n            axios.delete(`${ServiceApi}/api/v1/delete/file/${this.state.fileName}`);\n            \n            // Upload file\n            let fd = new FormData();\n            fd.append('file', this.state.file);\n\n            axios.post(`${ServiceApi}/api/v1/upload`, fd, config)\n            .then( respone => {\n                this.setState({ file: respone.data.filename})\n                companyObject = {\n                    name: this.state.name,\n                    email: this.state.email,\n                    phone: this.state.phone,\n                    logo:  this.state.file,\n                    address: this.state.address,\n                    description: this.state.description\n                }\n                \n                // Update logo\n                axios.put(`${ServiceApi}`+`/api/v1/company/${this.state.id}`, companyObject)\n                .then(function () {\n                    window.location.href = `${window.origin}/#/company`;\n                })\n                .catch( error => {\n                    console.log(error);\n                })\n            })\n            .catch( error => console.log(error))\n        }else{\n            companyObject = {\n                name: this.state.name,\n                email: this.state.email,\n                phone: this.state.phone,\n                address: this.state.address,\n                description: this.state.description\n            }\n\n            // Update logo\n            axios.put(`${ServiceApi}`+`/api/v1/company/${this.state.id}`, companyObject)\n            .then(function () {\n                window.location.href = `${window.origin}/#/company`;\n            })\n            .catch( error => {\n                console.log(error);\n            })\n        }\n    }\n\n    componentDidMount(){\n        // Get companies\n        axios.get(`${ServiceApi}/api/v1/company/${this.state.id}`)\n        .then((respone) => {\n            this.setState({ company: respone.data.data });\n            this.state.company.map( item => {\n                this.setState({\n                    name: item.name,\n                    description: item.description,\n                    address: item.address,\n                    email: item.email,\n                    phone: item.phone,\n                    url: `${ServiceApi}/uploads/${item.logo}`,\n                    fileName: item.logo\n                });\n            });\n        })\n        .catch( error => {\n            console.log(error);\n        })\n    }\n\n    render(){\n        return(\n            <CCard>\n                <CCardBody>\n                     <CForm onSubmit={ this.submitHandler } >\n                         <CRow>\n                             <CCol className=\"col-md-8 col-xs-8\">\n                                <CRow>\n                                    <CCol className=\"md-12 xs-12\">\n                                        <CFormGroup>\n                                        <CLabel>Name <span className=\"text-danger\">*</span></CLabel>\n                                        <CInput\n                                        className=\"form-control\"\n                                        placeholder=\"Enter Name\"\n                                        name=\"name\"\n                                        value={this.state.name}\n                                        onChange={(e) => this.handleChange({ name: e.target.value }) }\n                                        />\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol className=\"md-12 xs-12\">\n                                        <CFormGroup>\n                                        <CLabel>Email</CLabel>\n                                        <CInput\n                                        className=\"form-control\"\n                                        placeholder=\"Enter Name\"\n                                        name=\"email\"\n                                        value={this.state.email}\n                                        onChange={(e) => this.handleChange({ email: e.target.value }) }\n                                        />\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol className=\"md-12 xs-12\">\n                                        <CFormGroup>\n                                        <CLabel>Phone </CLabel>\n                                        <CInput\n                                        className=\"form-control\"\n                                        placeholder=\"Enter Name\"\n                                        name=\"phone\"\n                                        value={this.state.phone}\n                                        onChange={(e) => this.handleChange({ phone: e.target.value }) }\n                                        />\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol className=\"md-12 xs-12\">\n                                        <CFormGroup>\n                                        <CLabel>Address </CLabel>\n                                        <CInput\n                                        className=\"form-control\"\n                                        placeholder=\"Enter Name\"\n                                        name=\"address\"\n                                        value={this.state.address}\n                                        onChange={(e) => this.handleChange({ address: e.target.value }) }\n                                        />\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol className=\"md-12 xs-12\">\n                                        <CFormGroup>\n                                        <CLabel>Description</CLabel>\n                                        <CKEditor\n                                            editor={ ClassicEditor }\n                                            data={this.state.description}\n                                            \n                                            onChange={ ( event, editor ) => {\n                                                const data = editor.getData();\n                                                this.setState({ description: data});\n                                            } }\n                                        />\n                                    </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                </CCol>\n                             <CCol className=\"col-md-4 col-xs-4 input-group mb-3\">\n                                 <CCard>\n                                     <CCardBody>\n                                     <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                                <img src={`${this.state.url}`} alt=\"logo\" className=\"img-fluid\"></img>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                     </CCardBody>\n                                     <CCardFooter>\n                                     <CRow>\n                                        <CCol className=\"md-12 xs-12\">\n                                            <CFormGroup>\n                                                <div className=\"input-group mb-3\">\n                                                    <div className=\"input-group-prepend\">\n                                                        <span className=\"input-group-text\">Upload</span>\n                                                    </div>\n                                                    <div className=\"custom-file\">\n                                                    <input type=\"file\" \n                                                    className=\"custom-file-input\" id=\"inputGroupFile01\"\n                                                    className=\"custom-file-input\"\n                                                    onChange={(e) => this.handleUploadChange(e)}\n                                                    />\n                                                    <label className=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label>\n                                                    </div>\n                                                </div>\n                                            </CFormGroup>\n                                        </CCol>\n                                    </CRow>\n                                     </CCardFooter>\n                                 </CCard>\n                             </CCol>\n                         </CRow>\n                         <CRow>\n                            <CCol className=\"md-12 xs-12\">\n                                <CFormGroup>\n                                    <CButton to=\"/company\" className=\"float-right\">Cancel</CButton>\n                                    <CButton type=\"submit\" className=\"float-right\">Save Change</CButton>\n                                </CFormGroup>\n                            </CCol>\n                        </CRow>\n                     </CForm>\n                </CCardBody>\n            </CCard>\n        );\n    }\n  }\n  export default UpdateCompany;",{"ruleId":"330","replacedBy":"331"},{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","severity":1,"message":"335","line":2,"column":10,"nodeType":"336","messageId":"337","endLine":2,"endColumn":14},{"ruleId":"338","severity":1,"message":"339","line":67,"column":32,"nodeType":"340","messageId":"341","endLine":67,"endColumn":34},{"ruleId":"342","severity":1,"message":"343","line":8,"column":9,"nodeType":"344","endLine":8,"endColumn":79},{"ruleId":"334","severity":1,"message":"345","line":12,"column":3,"nodeType":"336","messageId":"337","endLine":12,"endColumn":8},{"ruleId":"334","severity":1,"message":"346","line":21,"column":3,"nodeType":"336","messageId":"337","endLine":21,"endColumn":24},{"ruleId":"334","severity":1,"message":"347","line":22,"column":3,"nodeType":"336","messageId":"337","endLine":22,"endColumn":25},{"ruleId":"334","severity":1,"message":"348","line":23,"column":3,"nodeType":"336","messageId":"337","endLine":23,"endColumn":25},{"ruleId":"334","severity":1,"message":"349","line":6,"column":3,"nodeType":"336","messageId":"337","endLine":6,"endColumn":16},{"ruleId":"334","severity":1,"message":"350","line":15,"column":8,"nodeType":"336","messageId":"337","endLine":15,"endColumn":13},{"ruleId":"334","severity":1,"message":"351","line":3,"column":3,"nodeType":"336","messageId":"337","endLine":3,"endColumn":11},{"ruleId":"352","severity":1,"message":"353","line":4,"column":1,"nodeType":"354","endLine":78,"endColumn":2},{"ruleId":"334","severity":1,"message":"355","line":13,"column":5,"nodeType":"336","messageId":"337","endLine":13,"endColumn":12},{"ruleId":"338","severity":1,"message":"339","line":23,"column":19,"nodeType":"340","messageId":"341","endLine":23,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":23,"column":35,"nodeType":"340","messageId":"341","endLine":23,"endColumn":37},{"ruleId":"338","severity":1,"message":"339","line":39,"column":32,"nodeType":"340","messageId":"341","endLine":39,"endColumn":34},{"ruleId":"338","severity":1,"message":"339","line":39,"column":61,"nodeType":"340","messageId":"341","endLine":39,"endColumn":63},{"ruleId":"356","severity":1,"message":"357","line":57,"column":34,"nodeType":"340","messageId":"358","endLine":57,"endColumn":35},{"ruleId":"356","severity":1,"message":"357","line":69,"column":34,"nodeType":"340","messageId":"358","endLine":69,"endColumn":35},{"ruleId":"356","severity":1,"message":"357","line":78,"column":36,"nodeType":"340","messageId":"358","endLine":78,"endColumn":37},{"ruleId":"359","severity":1,"message":"360","line":81,"column":40,"nodeType":"361","messageId":"362","endLine":81,"endColumn":42},{"ruleId":"338","severity":1,"message":"339","line":10,"column":19,"nodeType":"340","messageId":"341","endLine":10,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":10,"column":35,"nodeType":"340","messageId":"341","endLine":10,"endColumn":37},{"ruleId":"363","severity":1,"message":"364","line":57,"column":76,"nodeType":"344","endLine":57,"endColumn":114},{"ruleId":"363","severity":1,"message":"364","line":57,"column":124,"nodeType":"344","endLine":57,"endColumn":162},{"ruleId":"363","severity":1,"message":"364","line":57,"column":180,"nodeType":"344","endLine":57,"endColumn":218},{"ruleId":"363","severity":1,"message":"364","line":79,"column":80,"nodeType":"344","endLine":79,"endColumn":118},{"ruleId":"363","severity":1,"message":"364","line":79,"column":128,"nodeType":"344","endLine":79,"endColumn":166},{"ruleId":"363","severity":1,"message":"364","line":79,"column":184,"nodeType":"344","endLine":79,"endColumn":222},{"ruleId":"334","severity":1,"message":"355","line":14,"column":5,"nodeType":"336","messageId":"337","endLine":14,"endColumn":12},{"ruleId":"338","severity":1,"message":"339","line":24,"column":19,"nodeType":"340","messageId":"341","endLine":24,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":24,"column":35,"nodeType":"340","messageId":"341","endLine":24,"endColumn":37},{"ruleId":"356","severity":1,"message":"357","line":46,"column":35,"nodeType":"340","messageId":"358","endLine":46,"endColumn":36},{"ruleId":"356","severity":1,"message":"357","line":64,"column":34,"nodeType":"340","messageId":"358","endLine":64,"endColumn":35},{"ruleId":"334","severity":1,"message":"365","line":10,"column":5,"nodeType":"336","messageId":"337","endLine":10,"endColumn":16},{"ruleId":"338","severity":1,"message":"339","line":19,"column":19,"nodeType":"340","messageId":"341","endLine":19,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":19,"column":35,"nodeType":"340","messageId":"341","endLine":19,"endColumn":37},{"ruleId":"356","severity":1,"message":"357","line":42,"column":34,"nodeType":"340","messageId":"358","endLine":42,"endColumn":35},{"ruleId":"356","severity":1,"message":"357","line":53,"column":37,"nodeType":"340","messageId":"358","endLine":53,"endColumn":38},{"ruleId":"338","severity":1,"message":"339","line":28,"column":19,"nodeType":"340","messageId":"341","endLine":28,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":28,"column":35,"nodeType":"340","messageId":"341","endLine":28,"endColumn":37},{"ruleId":"356","severity":1,"message":"357","line":42,"column":35,"nodeType":"340","messageId":"358","endLine":42,"endColumn":36},{"ruleId":"338","severity":1,"message":"339","line":19,"column":19,"nodeType":"340","messageId":"341","endLine":19,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":19,"column":35,"nodeType":"340","messageId":"341","endLine":19,"endColumn":37},{"ruleId":"366","severity":1,"message":"367","line":92,"column":85,"nodeType":"344","endLine":92,"endColumn":201},{"ruleId":"338","severity":1,"message":"339","line":19,"column":19,"nodeType":"340","messageId":"341","endLine":19,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":19,"column":35,"nodeType":"340","messageId":"341","endLine":19,"endColumn":37},{"ruleId":"356","severity":1,"message":"357","line":40,"column":34,"nodeType":"340","messageId":"358","endLine":40,"endColumn":35},{"ruleId":"356","severity":1,"message":"357","line":51,"column":37,"nodeType":"340","messageId":"358","endLine":51,"endColumn":38},{"ruleId":"338","severity":1,"message":"339","line":28,"column":19,"nodeType":"340","messageId":"341","endLine":28,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":28,"column":35,"nodeType":"340","messageId":"341","endLine":28,"endColumn":37},{"ruleId":"359","severity":1,"message":"360","line":45,"column":39,"nodeType":"361","messageId":"362","endLine":45,"endColumn":41},{"ruleId":"356","severity":1,"message":"357","line":60,"column":34,"nodeType":"340","messageId":"358","endLine":60,"endColumn":35},{"ruleId":"338","severity":1,"message":"339","line":23,"column":19,"nodeType":"340","messageId":"341","endLine":23,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":23,"column":35,"nodeType":"340","messageId":"341","endLine":23,"endColumn":37},{"ruleId":"356","severity":1,"message":"357","line":37,"column":32,"nodeType":"340","messageId":"358","endLine":37,"endColumn":33},{"ruleId":"356","severity":1,"message":"357","line":51,"column":31,"nodeType":"340","messageId":"358","endLine":51,"endColumn":32},{"ruleId":"338","severity":1,"message":"339","line":33,"column":19,"nodeType":"340","messageId":"341","endLine":33,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":33,"column":35,"nodeType":"340","messageId":"341","endLine":33,"endColumn":37},{"ruleId":"338","severity":1,"message":"339","line":65,"column":35,"nodeType":"340","messageId":"341","endLine":65,"endColumn":37},{"ruleId":"338","severity":1,"message":"339","line":74,"column":30,"nodeType":"340","messageId":"341","endLine":74,"endColumn":32},{"ruleId":"368","severity":1,"message":"369","line":218,"column":53,"nodeType":"370","endLine":218,"endColumn":64},{"ruleId":"368","severity":1,"message":"369","line":219,"column":53,"nodeType":"370","endLine":219,"endColumn":82},{"ruleId":"338","severity":1,"message":"339","line":32,"column":19,"nodeType":"340","messageId":"341","endLine":32,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":32,"column":35,"nodeType":"340","messageId":"341","endLine":32,"endColumn":37},{"ruleId":"338","severity":1,"message":"339","line":65,"column":30,"nodeType":"340","messageId":"341","endLine":65,"endColumn":32},{"ruleId":"356","severity":1,"message":"357","line":86,"column":42,"nodeType":"340","messageId":"358","endLine":86,"endColumn":43},{"ruleId":"356","severity":1,"message":"357","line":105,"column":38,"nodeType":"340","messageId":"358","endLine":105,"endColumn":39},{"ruleId":"359","severity":1,"message":"360","line":122,"column":39,"nodeType":"361","messageId":"362","endLine":122,"endColumn":41},{"ruleId":"368","severity":1,"message":"369","line":257,"column":53,"nodeType":"370","endLine":257,"endColumn":82},{"ruleId":"338","severity":1,"message":"339","line":278,"column":100,"nodeType":"340","messageId":"341","endLine":278,"endColumn":102},{"ruleId":"334","severity":1,"message":"351","line":3,"column":10,"nodeType":"336","messageId":"337","endLine":3,"endColumn":18},{"ruleId":"338","severity":1,"message":"339","line":24,"column":19,"nodeType":"340","messageId":"341","endLine":24,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":24,"column":35,"nodeType":"340","messageId":"341","endLine":24,"endColumn":37},{"ruleId":"356","severity":1,"message":"357","line":39,"column":31,"nodeType":"340","messageId":"358","endLine":39,"endColumn":32},{"ruleId":"356","severity":1,"message":"357","line":53,"column":31,"nodeType":"340","messageId":"358","endLine":53,"endColumn":32},{"ruleId":"359","severity":1,"message":"360","line":56,"column":44,"nodeType":"361","messageId":"362","endLine":56,"endColumn":46},{"ruleId":"338","severity":1,"message":"339","line":23,"column":19,"nodeType":"340","messageId":"341","endLine":23,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":23,"column":35,"nodeType":"340","messageId":"341","endLine":23,"endColumn":37},{"ruleId":"338","severity":1,"message":"339","line":37,"column":28,"nodeType":"340","messageId":"341","endLine":37,"endColumn":30},{"ruleId":"338","severity":1,"message":"339","line":37,"column":53,"nodeType":"340","messageId":"341","endLine":37,"endColumn":55},{"ruleId":"356","severity":1,"message":"357","line":40,"column":36,"nodeType":"340","messageId":"358","endLine":40,"endColumn":37},{"ruleId":"338","severity":1,"message":"339","line":23,"column":19,"nodeType":"340","messageId":"341","endLine":23,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":23,"column":35,"nodeType":"340","messageId":"341","endLine":23,"endColumn":37},{"ruleId":"338","severity":1,"message":"339","line":39,"column":28,"nodeType":"340","messageId":"341","endLine":39,"endColumn":30},{"ruleId":"338","severity":1,"message":"339","line":39,"column":53,"nodeType":"340","messageId":"341","endLine":39,"endColumn":55},{"ruleId":"356","severity":1,"message":"357","line":42,"column":35,"nodeType":"340","messageId":"358","endLine":42,"endColumn":36},{"ruleId":"359","severity":1,"message":"360","line":60,"column":39,"nodeType":"361","messageId":"362","endLine":60,"endColumn":41},{"ruleId":"338","severity":1,"message":"339","line":18,"column":19,"nodeType":"340","messageId":"341","endLine":18,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":18,"column":35,"nodeType":"340","messageId":"341","endLine":18,"endColumn":37},{"ruleId":"356","severity":1,"message":"357","line":36,"column":31,"nodeType":"340","messageId":"358","endLine":36,"endColumn":32},{"ruleId":"338","severity":1,"message":"339","line":19,"column":19,"nodeType":"340","messageId":"341","endLine":19,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":19,"column":35,"nodeType":"340","messageId":"341","endLine":19,"endColumn":37},{"ruleId":"356","severity":1,"message":"357","line":42,"column":31,"nodeType":"340","messageId":"358","endLine":42,"endColumn":32},{"ruleId":"356","severity":1,"message":"357","line":52,"column":34,"nodeType":"340","messageId":"358","endLine":52,"endColumn":35},{"ruleId":"334","severity":1,"message":"371","line":3,"column":8,"nodeType":"336","messageId":"337","endLine":3,"endColumn":9},{"ruleId":"338","severity":1,"message":"339","line":30,"column":19,"nodeType":"340","messageId":"341","endLine":30,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":30,"column":35,"nodeType":"340","messageId":"341","endLine":30,"endColumn":37},{"ruleId":"359","severity":1,"message":"360","line":67,"column":44,"nodeType":"361","messageId":"362","endLine":67,"endColumn":46},{"ruleId":"356","severity":1,"message":"357","line":74,"column":31,"nodeType":"340","messageId":"358","endLine":74,"endColumn":32},{"ruleId":"359","severity":1,"message":"360","line":98,"column":40,"nodeType":"361","messageId":"362","endLine":98,"endColumn":42},{"ruleId":"338","severity":1,"message":"339","line":17,"column":19,"nodeType":"340","messageId":"341","endLine":17,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":17,"column":35,"nodeType":"340","messageId":"341","endLine":17,"endColumn":37},{"ruleId":"356","severity":1,"message":"357","line":37,"column":34,"nodeType":"340","messageId":"358","endLine":37,"endColumn":35},{"ruleId":"366","severity":1,"message":"367","line":72,"column":80,"nodeType":"344","endLine":72,"endColumn":187},{"ruleId":"334","severity":1,"message":"365","line":7,"column":5,"nodeType":"336","messageId":"337","endLine":7,"endColumn":16},{"ruleId":"338","severity":1,"message":"339","line":18,"column":19,"nodeType":"340","messageId":"341","endLine":18,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":18,"column":35,"nodeType":"340","messageId":"341","endLine":18,"endColumn":37},{"ruleId":"356","severity":1,"message":"357","line":36,"column":31,"nodeType":"340","messageId":"358","endLine":36,"endColumn":32},{"ruleId":"338","severity":1,"message":"339","line":31,"column":19,"nodeType":"340","messageId":"341","endLine":31,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":31,"column":35,"nodeType":"340","messageId":"341","endLine":31,"endColumn":37},{"ruleId":"338","severity":1,"message":"339","line":63,"column":30,"nodeType":"340","messageId":"341","endLine":63,"endColumn":32},{"ruleId":"356","severity":1,"message":"357","line":84,"column":42,"nodeType":"340","messageId":"358","endLine":84,"endColumn":43},{"ruleId":"356","severity":1,"message":"357","line":103,"column":38,"nodeType":"340","messageId":"358","endLine":103,"endColumn":39},{"ruleId":"359","severity":1,"message":"360","line":118,"column":42,"nodeType":"361","messageId":"362","endLine":118,"endColumn":44},{"ruleId":"368","severity":1,"message":"369","line":237,"column":53,"nodeType":"370","endLine":237,"endColumn":82},"no-native-reassign",["372"],"no-negated-in-lhs",["373"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'CLink' is defined but never used.","'TheHeaderDropdownMssg' is defined but never used.","'TheHeaderDropdownNotif' is defined but never used.","'TheHeaderDropdownTasks' is defined but never used.","'CSidebarBrand' is defined but never used.","'CIcon' is defined but never used.","'Redirect' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'CSelect' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'CCardHeader' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'$' is defined but never used.","no-global-assign","no-unsafe-negation"]